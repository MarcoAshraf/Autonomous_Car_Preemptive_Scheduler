Component: Arm Compiler for Embedded 6.19 Tool: armlink [5e73cb00]

==============================================================================

Section Cross References

    main.o(.text.main) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    main.o(.text.main) refers to main.o(.bss.xQueue1) for xQueue1
    main.o(.text.main) refers to main.o(.bss.xQueue2) for xQueue2
    main.o(.text.main) refers to main.o(.bss.xQueue3) for xQueue3
    main.o(.text.main) refers to main.o(.bss.xQueue4) for xQueue4
    main.o(.text.main) refers to main.o(.bss.xQueue5) for xQueue5
    main.o(.text.main) refers to main.o(.bss.xSemaphore) for xSemaphore
    main.o(.text.main) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.text.main) refers to swc1.o(.text.ModulesInit) for ModulesInit
    main.o(.text.main) refers to main.o(.rodata.str1.1) for .L.str
    main.o(.text.main) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    main.o(.text.main) refers to swc1.o(.text.SwitchCheck) for SwitchCheck
    main.o(.text.main) refers to swc2.o(.text.Ultrasonic_Read) for Ultrasonic_Read
    main.o(.text.main) refers to swc2.o(.text.LDR_Read) for LDR_Read
    main.o(.text.main) refers to swc2.o(.text.TempSensor_Read) for TempSensor_Read
    main.o(.text.main) refers to swc3.o(.text.Ultrasonic_Update) for Ultrasonic_Update
    main.o(.text.main) refers to main.o(.bss.LDRHandle) for LDRHandle
    main.o(.text.main) refers to swc3.o(.text.LDR_Update) for LDR_Update
    main.o(.text.main) refers to main.o(.bss.TSHandle) for TSHandle
    main.o(.text.main) refers to swc3.o(.text.TS_Update) for TS_Update
    main.o(.text.main) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    main.o(.text.main) refers to main.o(.bss.LCDHandle) for LCDHandle
    main.o(.text.main) refers to swc4.o(.text.LCD_Print) for LCD_Print
    main.o(.text.main) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    adc.o(.ARM.exidx.text.ADC_Read) refers to adc.o(.text.ADC_Read) for [Anonymous Symbol]
    adc.o(.text.ADC_Init) refers to dio.o(.text.DIO_Init) for DIO_Init
    adc.o(.text.ADC_Init) refers to adc.o(.text.ADC_sequencer_EN) for ADC_sequencer_EN
    adc.o(.ARM.exidx.text.ADC_Init) refers to adc.o(.text.ADC_Init) for [Anonymous Symbol]
    adc.o(.ARM.exidx.text.ADC_sequencer_EN) refers to adc.o(.text.ADC_sequencer_EN) for [Anonymous Symbol]
    adc.o(.ARM.exidx.text.ADC_Init_TS) refers to adc.o(.text.ADC_Init_TS) for [Anonymous Symbol]
    adc.o(.text.ADC_Read_TS) refers to f2d.o(x$fpl$f2d) for __aeabi_f2d
    adc.o(.text.ADC_Read_TS) refers to dmul.o(x$fpl$dmul) for __aeabi_dmul
    adc.o(.text.ADC_Read_TS) refers to ddiv.o(x$fpl$ddiv) for __aeabi_ddiv
    adc.o(.text.ADC_Read_TS) refers to daddsub_clz.o(x$fpl$dadd) for __aeabi_dadd
    adc.o(.text.ADC_Read_TS) refers to dfix.o(x$fpl$dfix) for __aeabi_d2iz
    adc.o(.ARM.exidx.text.ADC_Read_TS) refers to adc.o(.text.ADC_Read_TS) for [Anonymous Symbol]
    delay.o(.ARM.exidx.text.delay_ms) refers to delay.o(.text.delay_ms) for [Anonymous Symbol]
    delay.o(.ARM.exidx.text.delay_us) refers to delay.o(.text.delay_us) for [Anonymous Symbol]
    dio.o(.text.DIO_Init) refers to dio.o(.rodata.pinCFG) for pinCFG
    dio.o(.ARM.exidx.text.DIO_Init) refers to dio.o(.text.DIO_Init) for [Anonymous Symbol]
    dio.o(.ARM.exidx.text.DIO_WritePort) refers to dio.o(.text.DIO_WritePort) for [Anonymous Symbol]
    dio.o(.ARM.exidx.text.DIO_WritePin) refers to dio.o(.text.DIO_WritePin) for [Anonymous Symbol]
    dio.o(.ARM.exidx.text.DIO_ReadPin) refers to dio.o(.text.DIO_ReadPin) for [Anonymous Symbol]
    dio.o(.ARM.exidx.text.DIO_ReadPort) refers to dio.o(.text.DIO_ReadPort) for [Anonymous Symbol]
    dio.o(.ARM.exidx.text.DIO_WritePinBitBanding) refers to dio.o(.text.DIO_WritePinBitBanding) for [Anonymous Symbol]
    dio.o(.ARM.exidx.text.DIO_ReadPinBitBanding) refers to dio.o(.text.DIO_ReadPinBitBanding) for [Anonymous Symbol]
    dio.o(.ARM.exidx.text.DIO_ChangePinDir) refers to dio.o(.text.DIO_ChangePinDir) for [Anonymous Symbol]
    gptm.o(.ARM.exidx.text.gptm_init) refers to gptm.o(.text.gptm_init) for [Anonymous Symbol]
    gptm.o(.ARM.exidx.text.gptm_deinit) refers to gptm.o(.text.gptm_deinit) for [Anonymous Symbol]
    gptm.o(.ARM.exidx.text.gptm_set_value_ms) refers to gptm.o(.text.gptm_set_value_ms) for [Anonymous Symbol]
    gptm.o(.ARM.exidx.text.gptm_set_value_ticks) refers to gptm.o(.text.gptm_set_value_ticks) for [Anonymous Symbol]
    gptm.o(.ARM.exidx.text.gptm_get_value) refers to gptm.o(.text.gptm_get_value) for [Anonymous Symbol]
    gptm.o(.ARM.exidx.text.gptm_enable) refers to gptm.o(.text.gptm_enable) for [Anonymous Symbol]
    lcd.o(.text.LCD_Cmd) refers to dio.o(.text.DIO_WritePort) for DIO_WritePort
    lcd.o(.text.LCD_Cmd) refers to dio.o(.text.DIO_WritePin) for DIO_WritePin
    lcd.o(.text.LCD_Cmd) refers to delay.o(.text.delay_us) for delay_us
    lcd.o(.ARM.exidx.text.LCD_Cmd) refers to lcd.o(.text.LCD_Cmd) for [Anonymous Symbol]
    lcd.o(.text.LCD_Clear) refers to lcd.o(.text.LCD_Cmd) for LCD_Cmd
    lcd.o(.ARM.exidx.text.LCD_Clear) refers to lcd.o(.text.LCD_Clear) for [Anonymous Symbol]
    lcd.o(.text.LCD_Init) refers to dio.o(.text.DIO_Init) for DIO_Init
    lcd.o(.text.LCD_Init) refers to delay.o(.text.delay_ms) for delay_ms
    lcd.o(.text.LCD_Init) refers to lcd.o(.text.LCD_Cmd) for LCD_Cmd
    lcd.o(.text.LCD_Init) refers to delay.o(.text.delay_us) for delay_us
    lcd.o(.ARM.exidx.text.LCD_Init) refers to lcd.o(.text.LCD_Init) for [Anonymous Symbol]
    lcd.o(.text.LCD_SendChar) refers to dio.o(.text.DIO_WritePin) for DIO_WritePin
    lcd.o(.text.LCD_SendChar) refers to dio.o(.text.DIO_WritePort) for DIO_WritePort
    lcd.o(.text.LCD_SendChar) refers to delay.o(.text.delay_us) for delay_us
    lcd.o(.ARM.exidx.text.LCD_SendChar) refers to lcd.o(.text.LCD_SendChar) for [Anonymous Symbol]
    lcd.o(.text.LCD_SendString) refers to lcd.o(.text.LCD_SendChar) for LCD_SendChar
    lcd.o(.ARM.exidx.text.LCD_SendString) refers to lcd.o(.text.LCD_SendString) for [Anonymous Symbol]
    lcd.o(.text.LCD_GoToString) refers to lcd.o(.text.LCD_Cmd) for LCD_Cmd
    lcd.o(.text.LCD_GoToString) refers to lcd.o(.text.LCD_SendString) for LCD_SendString
    lcd.o(.ARM.exidx.text.LCD_GoToString) refers to lcd.o(.text.LCD_GoToString) for [Anonymous Symbol]
    lcd.o(.text.LCD_Write_Int) refers to lcd.o(.text.LCD_SendChar) for LCD_SendChar
    lcd.o(.ARM.exidx.text.LCD_Write_Int) refers to lcd.o(.text.LCD_Write_Int) for [Anonymous Symbol]
    lcd.o(.text.LCD_GoTo) refers to lcd.o(.text.LCD_Cmd) for LCD_Cmd
    lcd.o(.ARM.exidx.text.LCD_GoTo) refers to lcd.o(.text.LCD_GoTo) for [Anonymous Symbol]
    motor.o(.text.Motors_Init) refers to dio.o(.text.DIO_Init) for DIO_Init
    motor.o(.text.Motors_Init) refers to pwm.o(.text.PWM_INIT) for PWM_INIT
    motor.o(.text.Motors_Init) refers to pwm.o(.text.PWM_set_DC) for PWM_set_DC
    motor.o(.ARM.exidx.text.Motors_Init) refers to motor.o(.text.Motors_Init) for [Anonymous Symbol]
    motor.o(.text.Motors_set_direction) refers to dio.o(.text.DIO_WritePin) for DIO_WritePin
    motor.o(.text.Motors_set_direction) refers to motor.o(.bss.direction) for direction
    motor.o(.ARM.exidx.text.Motors_set_direction) refers to motor.o(.text.Motors_set_direction) for [Anonymous Symbol]
    motor.o(.text.Motors_get_direction) refers to motor.o(.bss.direction) for direction
    motor.o(.ARM.exidx.text.Motors_get_direction) refers to motor.o(.text.Motors_get_direction) for [Anonymous Symbol]
    pushbutton.o(.text.PushButton_INIT) refers to dio.o(.text.DIO_Init) for DIO_Init
    pushbutton.o(.ARM.exidx.text.PushButton_INIT) refers to pushbutton.o(.text.PushButton_INIT) for [Anonymous Symbol]
    pushbutton.o(.text.GET_Start_Button) refers to dio.o(.text.DIO_ReadPin) for DIO_ReadPin
    pushbutton.o(.ARM.exidx.text.GET_Start_Button) refers to pushbutton.o(.text.GET_Start_Button) for [Anonymous Symbol]
    pushbutton.o(.text.GET_STOP_Button) refers to dio.o(.text.DIO_ReadPin) for DIO_ReadPin
    pushbutton.o(.ARM.exidx.text.GET_STOP_Button) refers to pushbutton.o(.text.GET_STOP_Button) for [Anonymous Symbol]
    pwm.o(.text.PWM_INIT) refers to dio.o(.text.DIO_Init) for DIO_Init
    pwm.o(.text.PWM_INIT) refers to pwm.o(.data.Load_Value) for Load_Value
    pwm.o(.text.PWM_INIT) refers to pwm.o(.data.Duty_Cycle) for Duty_Cycle
    pwm.o(.ARM.exidx.text.PWM_INIT) refers to pwm.o(.text.PWM_INIT) for [Anonymous Symbol]
    pwm.o(.text.PWM_set_DC) refers to pwm.o(.data.Load_Value) for Load_Value
    pwm.o(.text.PWM_set_DC) refers to pwm.o(.data.Duty_Cycle) for Duty_Cycle
    pwm.o(.ARM.exidx.text.PWM_set_DC) refers to pwm.o(.text.PWM_set_DC) for [Anonymous Symbol]
    pwm.o(.text.PWM_get_DC) refers to pwm.o(.data.Load_Value) for Load_Value
    pwm.o(.ARM.exidx.text.PWM_get_DC) refers to pwm.o(.text.PWM_get_DC) for [Anonymous Symbol]
    sensor.o(.text.TS_Init) refers to adc.o(.text.ADC_Init_TS) for ADC_Init_TS
    sensor.o(.ARM.exidx.text.TS_Init) refers to sensor.o(.text.TS_Init) for [Anonymous Symbol]
    sensor.o(.text.TS_Read) refers to adc.o(.text.ADC_Read_TS) for ADC_Read_TS
    sensor.o(.ARM.exidx.text.TS_Read) refers to sensor.o(.text.TS_Read) for [Anonymous Symbol]
    sensor.o(.text.LdrRight_Init) refers to adc.o(.text.ADC_Init) for ADC_Init
    sensor.o(.ARM.exidx.text.LdrRight_Init) refers to sensor.o(.text.LdrRight_Init) for [Anonymous Symbol]
    sensor.o(.text.LdrLeft_Init) refers to adc.o(.text.ADC_Init) for ADC_Init
    sensor.o(.ARM.exidx.text.LdrLeft_Init) refers to sensor.o(.text.LdrLeft_Init) for [Anonymous Symbol]
    sensor.o(.text.LdrRight_Read) refers to adc.o(.text.ADC_Read) for ADC_Read
    sensor.o(.ARM.exidx.text.LdrRight_Read) refers to sensor.o(.text.LdrRight_Read) for [Anonymous Symbol]
    sensor.o(.text.LdrLeft_Read) refers to adc.o(.text.ADC_Read) for ADC_Read
    sensor.o(.ARM.exidx.text.LdrLeft_Read) refers to sensor.o(.text.LdrLeft_Read) for [Anonymous Symbol]
    ultrasonic.o(.text.ultarsonic_init) refers to dio.o(.text.DIO_Init) for DIO_Init
    ultrasonic.o(.text.ultarsonic_init) refers to gptm.o(.text.gptm_init) for gptm_init
    ultrasonic.o(.text.ultarsonic_init) refers to gptm.o(.text.gptm_set_value_ticks) for gptm_set_value_ticks
    ultrasonic.o(.ARM.exidx.text.ultarsonic_init) refers to ultrasonic.o(.text.ultarsonic_init) for [Anonymous Symbol]
    ultrasonic.o(.text.ultarsonic_get_value) refers to dio.o(.text.DIO_WritePin) for DIO_WritePin
    ultrasonic.o(.text.ultarsonic_get_value) refers to delay.o(.text.delay_us) for delay_us
    ultrasonic.o(.text.ultarsonic_get_value) refers to dio.o(.text.DIO_ReadPin) for DIO_ReadPin
    ultrasonic.o(.text.ultarsonic_get_value) refers to gptm.o(.text.gptm_set_value_ticks) for gptm_set_value_ticks
    ultrasonic.o(.text.ultarsonic_get_value) refers to gptm.o(.text.gptm_enable) for gptm_enable
    ultrasonic.o(.text.ultarsonic_get_value) refers to gptm.o(.text.gptm_get_value) for gptm_get_value
    ultrasonic.o(.text.ultarsonic_get_value) refers to gptm.o(.text.gptm_deinit) for gptm_deinit
    ultrasonic.o(.text.ultarsonic_get_value) refers to dflt_clz.o(x$fpl$dfltu) for __aeabi_ui2d
    ultrasonic.o(.text.ultarsonic_get_value) refers to dmul.o(x$fpl$dmul) for __aeabi_dmul
    ultrasonic.o(.text.ultarsonic_get_value) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    ultrasonic.o(.text.ultarsonic_get_value) refers to daddsub_clz.o(x$fpl$dadd) for __aeabi_dadd
    ultrasonic.o(.text.ultarsonic_get_value) refers to ddiv.o(x$fpl$ddiv) for __aeabi_ddiv
    ultrasonic.o(.text.ultarsonic_get_value) refers to dfixu.o(x$fpl$dfixu) for __aeabi_d2uiz
    ultrasonic.o(.ARM.exidx.text.ultarsonic_get_value) refers to ultrasonic.o(.text.ultarsonic_get_value) for [Anonymous Symbol]
    swc1.o(.text.ModulesInit) refers to pushbutton.o(.text.PushButton_INIT) for PushButton_INIT
    swc1.o(.text.ModulesInit) refers to lcd.o(.text.LCD_Init) for LCD_Init
    swc1.o(.text.ModulesInit) refers to motor.o(.text.Motors_Init) for Motors_Init
    swc1.o(.text.ModulesInit) refers to sensor.o(.text.TS_Init) for TS_Init
    swc1.o(.text.ModulesInit) refers to sensor.o(.text.LdrLeft_Init) for LdrLeft_Init
    swc1.o(.text.ModulesInit) refers to sensor.o(.text.LdrRight_Init) for LdrRight_Init
    swc1.o(.text.ModulesInit) refers to ultrasonic.o(.text.ultarsonic_init) for ultarsonic_init
    swc1.o(.text.ModulesInit) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    swc1.o(.ARM.exidx.text.ModulesInit) refers to swc1.o(.text.ModulesInit) for [Anonymous Symbol]
    swc1.o(.text.SwitchCheck) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    swc1.o(.text.SwitchCheck) refers to pushbutton.o(.text.GET_Start_Button) for GET_Start_Button
    swc1.o(.text.SwitchCheck) refers to lcd.o(.text.LCD_Clear) for LCD_Clear
    swc1.o(.text.SwitchCheck) refers to swc1.o(.rodata.str1.1) for .L.str
    swc1.o(.text.SwitchCheck) refers to lcd.o(.text.LCD_GoToString) for LCD_GoToString
    swc1.o(.text.SwitchCheck) refers to tasks.o(.text.xTaskDelayUntil) for xTaskDelayUntil
    swc1.o(.text.SwitchCheck) refers to lcd.o(.text.LCD_SendString) for LCD_SendString
    swc1.o(.text.SwitchCheck) refers to motor.o(.text.Motors_set_direction) for Motors_set_direction
    swc1.o(.ARM.exidx.text.SwitchCheck) refers to swc1.o(.text.SwitchCheck) for [Anonymous Symbol]
    swc2.o(.text.Ultrasonic_Read) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    swc2.o(.text.Ultrasonic_Read) refers to ultrasonic.o(.text.ultarsonic_get_value) for ultarsonic_get_value
    swc2.o(.text.Ultrasonic_Read) refers to main.o(.bss.xQueue3) for xQueue3
    swc2.o(.text.Ultrasonic_Read) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    swc2.o(.text.Ultrasonic_Read) refers to tasks.o(.text.xTaskDelayUntil) for xTaskDelayUntil
    swc2.o(.ARM.exidx.text.Ultrasonic_Read) refers to swc2.o(.text.Ultrasonic_Read) for [Anonymous Symbol]
    swc2.o(.text.LDR_Read) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    swc2.o(.text.LDR_Read) refers to sensor.o(.text.LdrRight_Read) for LdrRight_Read
    swc2.o(.text.LDR_Read) refers to sensor.o(.text.LdrLeft_Read) for LdrLeft_Read
    swc2.o(.text.LDR_Read) refers to main.o(.bss.xQueue1) for xQueue1
    swc2.o(.text.LDR_Read) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    swc2.o(.text.LDR_Read) refers to tasks.o(.text.xTaskDelayUntil) for xTaskDelayUntil
    swc2.o(.ARM.exidx.text.LDR_Read) refers to swc2.o(.text.LDR_Read) for [Anonymous Symbol]
    swc2.o(.text.TempSensor_Read) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    swc2.o(.text.TempSensor_Read) refers to sensor.o(.text.TS_Read) for TS_Read
    swc2.o(.text.TempSensor_Read) refers to main.o(.bss.TSHandle) for TSHandle
    swc2.o(.text.TempSensor_Read) refers to tasks.o(.text.vTaskResume) for vTaskResume
    swc2.o(.text.TempSensor_Read) refers to main.o(.bss.xQueue2) for xQueue2
    swc2.o(.text.TempSensor_Read) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    swc2.o(.text.TempSensor_Read) refers to tasks.o(.text.xTaskDelayUntil) for xTaskDelayUntil
    swc2.o(.ARM.exidx.text.TempSensor_Read) refers to swc2.o(.text.TempSensor_Read) for [Anonymous Symbol]
    swc3.o(.text.Ultrasonic_Update) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    swc3.o(.text.Ultrasonic_Update) refers to main.o(.bss.xQueue3) for xQueue3
    swc3.o(.text.Ultrasonic_Update) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    swc3.o(.text.Ultrasonic_Update) refers to main.o(.bss.xQueue5) for xQueue5
    swc3.o(.text.Ultrasonic_Update) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    swc3.o(.text.Ultrasonic_Update) refers to motor.o(.text.Motors_get_direction) for Motors_get_direction
    swc3.o(.text.Ultrasonic_Update) refers to motor.o(.text.Motors_set_direction) for Motors_set_direction
    swc3.o(.text.Ultrasonic_Update) refers to main.o(.bss.xSemaphore) for xSemaphore
    swc3.o(.text.Ultrasonic_Update) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    swc3.o(.text.Ultrasonic_Update) refers to tasks.o(.text.xTaskDelayUntil) for xTaskDelayUntil
    swc3.o(.ARM.exidx.text.Ultrasonic_Update) refers to swc3.o(.text.Ultrasonic_Update) for [Anonymous Symbol]
    swc3.o(.text.LDR_Update) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    swc3.o(.text.LDR_Update) refers to main.o(.bss.xQueue1) for xQueue1
    swc3.o(.text.LDR_Update) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    swc3.o(.text.LDR_Update) refers to main.o(.bss.xQueue4) for xQueue4
    swc3.o(.text.LDR_Update) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    swc3.o(.text.LDR_Update) refers to main.o(.bss.xSemaphore) for xSemaphore
    swc3.o(.text.LDR_Update) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    swc3.o(.text.LDR_Update) refers to motor.o(.text.Motors_set_direction) for Motors_set_direction
    swc3.o(.text.LDR_Update) refers to tasks.o(.text.xTaskDelayUntil) for xTaskDelayUntil
    swc3.o(.ARM.exidx.text.LDR_Update) refers to swc3.o(.text.LDR_Update) for [Anonymous Symbol]
    swc3.o(.text.TS_Update) refers to motor.o(.text.Motors_set_direction) for Motors_set_direction
    swc3.o(.text.TS_Update) refers to lcd.o(.text.LCD_Clear) for LCD_Clear
    swc3.o(.text.TS_Update) refers to swc3.o(.rodata.str1.1) for .L.str
    swc3.o(.text.TS_Update) refers to lcd.o(.text.LCD_GoToString) for LCD_GoToString
    swc3.o(.text.TS_Update) refers to delay.o(.text.delay_ms) for delay_ms
    swc3.o(.text.TS_Update) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    swc3.o(.ARM.exidx.text.TS_Update) refers to swc3.o(.text.TS_Update) for [Anonymous Symbol]
    swc4.o(.text.LCD_Print) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    swc4.o(.text.LCD_Print) refers to main.o(.bss.xQueue5) for xQueue5
    swc4.o(.text.LCD_Print) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    swc4.o(.text.LCD_Print) refers to main.o(.bss.xQueue4) for xQueue4
    swc4.o(.text.LCD_Print) refers to main.o(.bss.xQueue2) for xQueue2
    swc4.o(.text.LCD_Print) refers to lcd.o(.text.LCD_GoTo) for LCD_GoTo
    swc4.o(.text.LCD_Print) refers to swc4.o(.rodata.str1.1) for .L.str
    swc4.o(.text.LCD_Print) refers to lcd.o(.text.LCD_SendString) for LCD_SendString
    swc4.o(.text.LCD_Print) refers to lcd.o(.text.LCD_Write_Int) for LCD_Write_Int
    swc4.o(.text.LCD_Print) refers to tasks.o(.text.xTaskDelayUntil) for xTaskDelayUntil
    swc4.o(.ARM.exidx.text.LCD_Print) refers to swc4.o(.text.LCD_Print) for [Anonymous Symbol]
    startup_tm4c123.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(STACK) for __initial_sp
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(.text) for Reset_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.SysTick_Handler) for SysTick_Handler
    startup_tm4c123.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(.text) refers to system_tm4c123.o(.text.SystemInit) for SystemInit
    startup_tm4c123.o(.text) refers to __main.o(!!!main) for __main
    startup_tm4c123.o(.text) refers to startup_tm4c123.o(HEAP) for Heap_Mem
    startup_tm4c123.o(.text) refers to startup_tm4c123.o(STACK) for Stack_Mem
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.text.getOscClk) for getOscClk
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_tm4c123.o(.ARM.exidx.text.getOscClk) refers to system_tm4c123.o(.text.getOscClk) for [Anonymous Symbol]
    system_tm4c123.o(.ARM.exidx.text.SystemInit) refers to system_tm4c123.o(.text.SystemInit) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.text.prvTaskExitError) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.SVC_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortEnableVFP) for vPortEnableVFP
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.ulTimerCountsForOneTick) for ulTimerCountsForOneTick
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.xMaximumPossibleSuppressedTicks) for xMaximumPossibleSuppressedTicks
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.ulStoppedTimerCompensation) for ulStoppedTimerCompensation
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEnableVFP) refers to port.o(.text.vPortEnableVFP) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port.o(.text.vPortEndScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.ARM.exidx.text.SysTick_Handler) refers to port.o(.text.SysTick_Handler) for [Anonymous Symbol]
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.xMaximumPossibleSuppressedTicks) for xMaximumPossibleSuppressedTicks
    port.o(.text.vPortSuppressTicksAndSleep) refers to tasks.o(.text.eTaskConfirmSleepModeStatus) for eTaskConfirmSleepModeStatus
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.ulTimerCountsForOneTick) for ulTimerCountsForOneTick
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.ulStoppedTimerCompensation) for ulStoppedTimerCompensation
    port.o(.text.vPortSuppressTicksAndSleep) refers to tasks.o(.text.vTaskStepTick) for vTaskStepTick
    port.o(.ARM.exidx.text.vPortSuppressTicksAndSleep) refers to port.o(.text.vPortSuppressTicksAndSleep) for [Anonymous Symbol]
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.ARM.exidx.text.vPortValidateInterruptPriority) refers to port.o(.text.vPortValidateInterruptPriority) for [Anonymous Symbol]
    heap_1.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_1.o(.text.pvPortMalloc) refers to heap_1.o(.bss.pvPortMalloc.pucAlignedHeap) for pvPortMalloc.pucAlignedHeap
    heap_1.o(.text.pvPortMalloc) refers to heap_1.o(.bss.ucHeap) for ucHeap
    heap_1.o(.text.pvPortMalloc) refers to heap_1.o(.bss.xNextFreeByte) for xNextFreeByte
    heap_1.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_1.o(.ARM.exidx.text.pvPortMalloc) refers to heap_1.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_1.o(.ARM.exidx.text.vPortFree) refers to heap_1.o(.text.vPortFree) for [Anonymous Symbol]
    heap_1.o(.text.vPortInitialiseBlocks) refers to heap_1.o(.bss.xNextFreeByte) for xNextFreeByte
    heap_1.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_1.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    heap_1.o(.text.xPortGetFreeHeapSize) refers to heap_1.o(.bss.xNextFreeByte) for xNextFreeByte
    heap_1.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_1.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_1.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseNewQueue) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    queue.o(.ARM.exidx.text.prvInitialiseNewQueue) refers to queue.o(.text.prvInitialiseNewQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.prvInitialiseMutex) refers to queue.o(.text.prvInitialiseMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGetMutexHolder) refers to queue.o(.text.xQueueGetMutexHolder) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR) refers to queue.o(.text.xQueueGetMutexHolderFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvIsQueueFull) for prvIsQueueFull
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataToQueue) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.text.prvCopyDataToQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataToQueue) refers to queue.o(.text.prvCopyDataToQueue) for [Anonymous Symbol]
    queue.o(.text.prvNotifyQueueSetContainer) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.prvNotifyQueueSetContainer) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvNotifyQueueSetContainer) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer) refers to queue.o(.text.prvNotifyQueueSetContainer) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueFull) refers to queue.o(.text.prvIsQueueFull) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGiveFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataFromQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataFromQueue) refers to queue.o(.text.prvCopyDataFromQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueEmpty) refers to queue.o(.text.prvIsQueueEmpty) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueReceiveFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueuePeekFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to heap_1.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueNumber) refers to queue.o(.text.uxQueueGetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.vQueueSetQueueNumber) refers to queue.o(.text.vQueueSetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.ucQueueGetQueueType) refers to queue.o(.text.ucQueueGetQueueType) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for vTaskPlaceOnEventListRestricted
    queue.o(.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.vQueueWaitForMessageRestricted) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateSet) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateSet) refers to queue.o(.text.xQueueCreateSet) for [Anonymous Symbol]
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueAddToSet) refers to queue.o(.text.xQueueAddToSet) for [Anonymous Symbol]
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueRemoveFromSet) refers to queue.o(.text.xQueueRemoveFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    queue.o(.ARM.exidx.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueSelectFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueSelectFromSetFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to heap_1.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.xTaskCreate) refers to rt_memclr.o(.text) for __aeabi_memclr
    tasks.o(.text.xTaskCreate) refers to heap_1.o(.text.vPortFree) for vPortFree
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseNewTask) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    tasks.o(.text.prvInitialiseNewTask) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.prvInitialiseNewTask) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.ARM.exidx.text.prvInitialiseNewTask) refers to tasks.o(.text.prvInitialiseNewTask) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvAddNewTaskToReadyList) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.prvDeleteTCB) refers to heap_1.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.prvDeleteTCB) refers to tasks.o(.text.prvDeleteTCB) for [Anonymous Symbol]
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.eTaskGetState) refers to tasks.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(.ARM.exidx.text.vTaskSuspend) refers to tasks.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskResume) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskResume) refers to tasks.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended) refers to tasks.o(.text.prvTaskIsTaskSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.str1.1) for .L.str
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    tasks.o(.text.vTaskStartScheduler) refers to timers.o(.text.xTimerCreateTimerTask) for xTimerCreateTimerTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.uxTopUsedPriority) for uxTopUsedPriority
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvGetExpectedIdleTime) for prvGetExpectedIdleTime
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvIdleTask) refers to port.o(.text.vPortSuppressTicksAndSleep) for vPortSuppressTicksAndSleep
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetHandle) refers to strlen.o(.text) for strlen
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.text.prvSearchForNameWithinSingleList) for prvSearchForNameWithinSingleList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskGetHandle) refers to tasks.o(.text.xTaskGetHandle) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvSearchForNameWithinSingleList) refers to tasks.o(.text.prvSearchForNameWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.prvListTasksWithinSingleList) for prvListTasksWithinSingleList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.uxTaskGetSystemState) refers to tasks.o(.text.uxTaskGetSystemState) for [Anonymous Symbol]
    tasks.o(.text.prvListTasksWithinSingleList) refers to tasks.o(.text.vTaskGetInfo) for vTaskGetInfo
    tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList) refers to tasks.o(.text.prvListTasksWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetIdleTaskHandle) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.ARM.exidx.text.xTaskGetIdleTaskHandle) refers to tasks.o(.text.xTaskGetIdleTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskStepTick) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.vTaskStepTick) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskStepTick) refers to tasks.o(.text.vTaskStepTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.xTaskAbortDelay) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskAbortDelay) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskAbortDelay) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskAbortDelay) refers to tasks.o(.text.xTaskAbortDelay) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber) refers to tasks.o(.text.uxTaskGetTaskNumber) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSetTaskNumber) refers to tasks.o(.text.vTaskSetTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.text.eTaskConfirmSleepModeStatus) for [Anonymous Symbol]
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.vTaskGetInfo) refers to tasks.o(.text.vTaskGetInfo) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetStackHighWaterMark2) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskGetStackHighWaterMark2) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark2) refers to tasks.o(.text.uxTaskGetStackHighWaterMark2) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.uxTaskGetStackHighWaterMark) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.ulTaskGenericNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.text.vTaskGenericNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.text.ulTaskGenericNotifyValueClear) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvInitialiseTaskLists) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.ARM.exidx.text.prvInitialiseTaskLists) refers to tasks.o(.text.prvInitialiseTaskLists) for [Anonymous Symbol]
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for [Anonymous Symbol]
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.prvGetExpectedIdleTime) refers to tasks.o(.text.prvGetExpectedIdleTime) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvTimerTask) for prvTimerTask
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.rodata.str1.1) for .L.str
    timers.o(.text.xTimerCreateTimerTask) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    timers.o(.ARM.exidx.text.xTimerCreateTimerTask) refers to timers.o(.text.xTimerCreateTimerTask) for [Anonymous Symbol]
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList1) for xActiveTimerList1
    timers.o(.text.prvCheckForValidListAndQueue) refers to list.o(.text.vListInitialise) for vListInitialise
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList2) for xActiveTimerList2
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue) refers to timers.o(.text.prvCheckForValidListAndQueue) for [Anonymous Symbol]
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvGetNextExpireTime) for prvGetNextExpireTime
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for prvProcessTimerOrBlockTask
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessReceivedCommands) for prvProcessReceivedCommands
    timers.o(.ARM.exidx.text.prvTimerTask) refers to timers.o(.text.prvTimerTask) for [Anonymous Symbol]
    timers.o(.text.xTimerCreate) refers to heap_1.o(.text.pvPortMalloc) for pvPortMalloc
    timers.o(.text.xTimerCreate) refers to timers.o(.text.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(.ARM.exidx.text.xTimerCreate) refers to timers.o(.text.xTimerCreate) for [Anonymous Symbol]
    timers.o(.text.prvInitialiseNewTimer) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.prvInitialiseNewTimer) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    timers.o(.ARM.exidx.text.prvInitialiseNewTimer) refers to timers.o(.text.prvInitialiseNewTimer) for [Anonymous Symbol]
    timers.o(.text.xTimerGenericCommand) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerGenericCommand) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerGenericCommand) refers to timers.o(.text.xTimerGenericCommand) for [Anonymous Symbol]
    timers.o(.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.text.xTimerGetTimerDaemonTaskHandle) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetPeriod) refers to timers.o(.text.xTimerGetPeriod) for [Anonymous Symbol]
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetReloadMode) refers to timers.o(.text.vTimerSetReloadMode) for [Anonymous Symbol]
    timers.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerGetReloadMode) refers to timers.o(.text.xTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.text.uxTimerGetReloadMode) refers to timers.o(.text.xTimerGetReloadMode) for xTimerGetReloadMode
    timers.o(.ARM.exidx.text.uxTimerGetReloadMode) refers to timers.o(.text.uxTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetExpiryTime) refers to timers.o(.text.xTimerGetExpiryTime) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.pcTimerGetName) refers to timers.o(.text.pcTimerGetName) for [Anonymous Symbol]
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerIsTimerActive) refers to timers.o(.text.xTimerIsTimerActive) for [Anonymous Symbol]
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.pvTimerGetTimerID) refers to timers.o(.text.pvTimerGetTimerID) for [Anonymous Symbol]
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetTimerID) refers to timers.o(.text.vTimerSetTimerID) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCall) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCall) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.ARM.exidx.text.xTimerPendFunctionCall) refers to timers.o(.text.xTimerPendFunctionCall) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.uxTimerGetTimerNumber) refers to timers.o(.text.uxTimerGetTimerNumber) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.vTimerSetTimerNumber) refers to timers.o(.text.vTimerSetTimerNumber) for [Anonymous Symbol]
    timers.o(.text.prvGetNextExpireTime) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvGetNextExpireTime) refers to timers.o(.text.prvGetNextExpireTime) for [Anonymous Symbol]
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessTimerOrBlockTask) refers to queue.o(.text.vQueueWaitForMessageRestricted) for vQueueWaitForMessageRestricted
    timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for [Anonymous Symbol]
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessReceivedCommands) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    timers.o(.text.prvProcessReceivedCommands) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvReloadTimer) for prvReloadTimer
    timers.o(.text.prvProcessReceivedCommands) refers to heap_1.o(.text.vPortFree) for vPortFree
    timers.o(.ARM.exidx.text.prvProcessReceivedCommands) refers to timers.o(.text.prvProcessReceivedCommands) for [Anonymous Symbol]
    timers.o(.text.prvSampleTimeNow) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.bss.prvSampleTimeNow.xLastTime) for prvSampleTimeNow.xLastTime
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.text.prvSwitchTimerLists) for prvSwitchTimerLists
    timers.o(.ARM.exidx.text.prvSampleTimeNow) refers to timers.o(.text.prvSampleTimeNow) for [Anonymous Symbol]
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvProcessExpiredTimer) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.text.prvReloadTimer) for prvReloadTimer
    timers.o(.ARM.exidx.text.prvProcessExpiredTimer) refers to timers.o(.text.prvProcessExpiredTimer) for [Anonymous Symbol]
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.ARM.exidx.text.prvSwitchTimerLists) refers to timers.o(.text.prvSwitchTimerLists) for [Anonymous Symbol]
    timers.o(.text.prvReloadTimer) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.ARM.exidx.text.prvReloadTimer) refers to timers.o(.text.prvReloadTimer) for [Anonymous Symbol]
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvInsertTimerInActiveList) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvInsertTimerInActiveList) refers to timers.o(.text.prvInsertTimerInActiveList) for [Anonymous Symbol]
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset4.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    daddsub_clz.o(x$fpl$dadd) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    daddsub_clz.o(x$fpl$dadd) refers to daddsub_clz.o(x$fpl$dsub) for _dsub1
    daddsub_clz.o(x$fpl$dadd) refers to dretinf.o(x$fpl$dretinf) for __fpl_dretinf
    daddsub_clz.o(x$fpl$dadd) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    daddsub_clz.o(x$fpl$drsb) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    daddsub_clz.o(x$fpl$drsb) refers to daddsub_clz.o(x$fpl$dadd) for _dadd1
    daddsub_clz.o(x$fpl$drsb) refers to daddsub_clz.o(x$fpl$dsub) for _dsub1
    daddsub_clz.o(x$fpl$dsub) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    daddsub_clz.o(x$fpl$dsub) refers to daddsub_clz.o(x$fpl$dadd) for _dadd1
    daddsub_clz.o(x$fpl$dsub) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    ddiv.o(x$fpl$drdiv) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ddiv.o(x$fpl$drdiv) refers to ddiv.o(x$fpl$ddiv) for ddiv_entry
    ddiv.o(x$fpl$ddiv) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ddiv.o(x$fpl$ddiv) refers to dretinf.o(x$fpl$dretinf) for __fpl_dretinf
    ddiv.o(x$fpl$ddiv) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    dfix.o(x$fpl$dfix) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dfix.o(x$fpl$dfix) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    dfix.o(x$fpl$dfixr) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dfix.o(x$fpl$dfixr) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    dfixu.o(x$fpl$dfixu) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dfixu.o(x$fpl$dfixu) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    dfixu.o(x$fpl$dfixur) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dfixu.o(x$fpl$dfixur) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    dflt_clz.o(x$fpl$dfltu) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dflt_clz.o(x$fpl$dflt) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dflt_clz.o(x$fpl$dfltn) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dmul.o(x$fpl$dmul) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dmul.o(x$fpl$dmul) refers to dretinf.o(x$fpl$dretinf) for __fpl_dretinf
    dmul.o(x$fpl$dmul) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    f2d.o(x$fpl$f2d) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    f2d.o(x$fpl$f2d) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    f2d.o(x$fpl$f2d) refers to dretinf.o(x$fpl$dretinf) for __fpl_dretinf
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    dnaninf.o(x$fpl$dnaninf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dretinf.o(x$fpl$dretinf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fnaninf.o(x$fpl$fnaninf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_tm4c123.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000034) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000001) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000010) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_relocate_pie_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000035) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$0000001A) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000028) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000029) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing adc.o(.text), (0 bytes).
    Removing adc.o(.ARM.exidx.text.ADC_Read), (8 bytes).
    Removing adc.o(.ARM.exidx.text.ADC_Init), (8 bytes).
    Removing adc.o(.ARM.exidx.text.ADC_sequencer_EN), (8 bytes).
    Removing adc.o(.ARM.exidx.text.ADC_Init_TS), (8 bytes).
    Removing adc.o(.ARM.exidx.text.ADC_Read_TS), (8 bytes).
    Removing delay.o(.text), (0 bytes).
    Removing delay.o(.ARM.exidx.text.delay_ms), (8 bytes).
    Removing delay.o(.ARM.exidx.text.delay_us), (8 bytes).
    Removing dio.o(.text), (0 bytes).
    Removing dio.o(.ARM.exidx.text.DIO_Init), (8 bytes).
    Removing dio.o(.ARM.exidx.text.DIO_WritePort), (8 bytes).
    Removing dio.o(.ARM.exidx.text.DIO_WritePin), (8 bytes).
    Removing dio.o(.ARM.exidx.text.DIO_ReadPin), (8 bytes).
    Removing dio.o(.text.DIO_ReadPort), (140 bytes).
    Removing dio.o(.ARM.exidx.text.DIO_ReadPort), (8 bytes).
    Removing dio.o(.text.DIO_WritePinBitBanding), (218 bytes).
    Removing dio.o(.ARM.exidx.text.DIO_WritePinBitBanding), (8 bytes).
    Removing dio.o(.text.DIO_ReadPinBitBanding), (274 bytes).
    Removing dio.o(.ARM.exidx.text.DIO_ReadPinBitBanding), (8 bytes).
    Removing dio.o(.text.DIO_ChangePinDir), (416 bytes).
    Removing dio.o(.ARM.exidx.text.DIO_ChangePinDir), (8 bytes).
    Removing gptm.o(.text), (0 bytes).
    Removing gptm.o(.ARM.exidx.text.gptm_init), (8 bytes).
    Removing gptm.o(.ARM.exidx.text.gptm_deinit), (8 bytes).
    Removing gptm.o(.text.gptm_set_value_ms), (54 bytes).
    Removing gptm.o(.ARM.exidx.text.gptm_set_value_ms), (8 bytes).
    Removing gptm.o(.ARM.exidx.text.gptm_set_value_ticks), (8 bytes).
    Removing gptm.o(.ARM.exidx.text.gptm_get_value), (8 bytes).
    Removing gptm.o(.ARM.exidx.text.gptm_enable), (8 bytes).
    Removing lcd.o(.text), (0 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_Cmd), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_Clear), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_Init), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_SendChar), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_SendString), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_GoToString), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_Write_Int), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_GoTo), (8 bytes).
    Removing motor.o(.text), (0 bytes).
    Removing motor.o(.ARM.exidx.text.Motors_Init), (8 bytes).
    Removing motor.o(.ARM.exidx.text.Motors_set_direction), (8 bytes).
    Removing motor.o(.ARM.exidx.text.Motors_get_direction), (8 bytes).
    Removing pushbutton.o(.text), (0 bytes).
    Removing pushbutton.o(.ARM.exidx.text.PushButton_INIT), (8 bytes).
    Removing pushbutton.o(.ARM.exidx.text.GET_Start_Button), (8 bytes).
    Removing pushbutton.o(.text.GET_STOP_Button), (46 bytes).
    Removing pushbutton.o(.ARM.exidx.text.GET_STOP_Button), (8 bytes).
    Removing pwm.o(.text), (0 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_INIT), (8 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_set_DC), (8 bytes).
    Removing pwm.o(.text.PWM_get_DC), (36 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_get_DC), (8 bytes).
    Removing sensor.o(.text), (0 bytes).
    Removing sensor.o(.ARM.exidx.text.TS_Init), (8 bytes).
    Removing sensor.o(.ARM.exidx.text.TS_Read), (8 bytes).
    Removing sensor.o(.ARM.exidx.text.LdrRight_Init), (8 bytes).
    Removing sensor.o(.ARM.exidx.text.LdrLeft_Init), (8 bytes).
    Removing sensor.o(.ARM.exidx.text.LdrRight_Read), (8 bytes).
    Removing sensor.o(.ARM.exidx.text.LdrLeft_Read), (8 bytes).
    Removing ultrasonic.o(.text), (0 bytes).
    Removing ultrasonic.o(.ARM.exidx.text.ultarsonic_init), (8 bytes).
    Removing ultrasonic.o(.ARM.exidx.text.ultarsonic_get_value), (8 bytes).
    Removing swc1.o(.text), (0 bytes).
    Removing swc1.o(.ARM.exidx.text.ModulesInit), (8 bytes).
    Removing swc1.o(.ARM.exidx.text.SwitchCheck), (8 bytes).
    Removing swc2.o(.text), (0 bytes).
    Removing swc2.o(.ARM.exidx.text.Ultrasonic_Read), (8 bytes).
    Removing swc2.o(.ARM.exidx.text.LDR_Read), (8 bytes).
    Removing swc2.o(.ARM.exidx.text.TempSensor_Read), (8 bytes).
    Removing swc3.o(.text), (0 bytes).
    Removing swc3.o(.ARM.exidx.text.Ultrasonic_Update), (8 bytes).
    Removing swc3.o(.ARM.exidx.text.LDR_Update), (8 bytes).
    Removing swc3.o(.ARM.exidx.text.TS_Update), (8 bytes).
    Removing swc4.o(.text), (0 bytes).
    Removing swc4.o(.ARM.exidx.text.LCD_Print), (8 bytes).
    Removing system_tm4c123.o(.text), (0 bytes).
    Removing system_tm4c123.o(.text.SystemCoreClockUpdate), (326 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_tm4c123.o(.text.getOscClk), (360 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.getOscClk), (8 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing freertos_evr.o(.text), (0 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnableVFP), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (46 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSuppressTicksAndSleep), (8 bytes).
    Removing port.o(.text.vPortValidateInterruptPriority), (132 bytes).
    Removing port.o(.ARM.exidx.text.vPortValidateInterruptPriority), (8 bytes).
    Removing heap_1.o(.text), (0 bytes).
    Removing heap_1.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_1.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_1.o(.text.vPortInitialiseBlocks), (14 bytes).
    Removing heap_1.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing heap_1.o(.text.xPortGetFreeHeapSize), (18 bytes).
    Removing heap_1.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseNewQueue), (8 bytes).
    Removing queue.o(.text.xQueueCreateMutex), (38 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.text.prvInitialiseMutex), (44 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseMutex), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolder), (74 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolder), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolderFromISR), (60 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (108 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (110 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (94 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataToQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueFull), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.text.xQueueGenericSendFromISR), (444 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveFromISR), (386 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataFromQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueEmpty), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (480 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (318 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (212 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaiting), (54 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (62 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (48 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.text.vQueueDelete), (48 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueNumber), (12 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueNumber), (8 bytes).
    Removing queue.o(.text.vQueueSetQueueNumber), (16 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueSetQueueNumber), (8 bytes).
    Removing queue.o(.text.ucQueueGetQueueType), (14 bytes).
    Removing queue.o(.ARM.exidx.text.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (62 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (68 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted), (8 bytes).
    Removing queue.o(.text.xQueueCreateSet), (24 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateSet), (8 bytes).
    Removing queue.o(.text.xQueueAddToSet), (64 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueAddToSet), (8 bytes).
    Removing queue.o(.text.xQueueRemoveFromSet), (72 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueRemoveFromSet), (8 bytes).
    Removing queue.o(.text.xQueueSelectFromSet), (28 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSet), (8 bytes).
    Removing queue.o(.text.xQueueSelectFromSetFromISR), (24 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR), (8 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseNewTask), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList), (8 bytes).
    Removing tasks.o(.text.vTaskDelete), (340 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvDeleteTCB), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskDelayUntil), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.text.vTaskDelay), (110 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.text.eTaskGetState), (272 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGet), (56 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (90 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskPrioritySet), (484 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended), (8 bytes).
    Removing tasks.o(.text.xTaskResumeFromISR), (304 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (42 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (30 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (70 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.text.xTaskGetHandle), (210 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetHandle), (8 bytes).
    Removing tasks.o(.text.prvSearchForNameWithinSingleList), (228 bytes).
    Removing tasks.o(.ARM.exidx.text.prvSearchForNameWithinSingleList), (8 bytes).
    Removing tasks.o(.text.uxTaskGetSystemState), (272 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetSystemState), (8 bytes).
    Removing tasks.o(.text.prvListTasksWithinSingleList), (164 bytes).
    Removing tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList), (8 bytes).
    Removing tasks.o(.text.xTaskGetIdleTaskHandle), (52 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetIdleTaskHandle), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStepTick), (8 bytes).
    Removing tasks.o(.text.xTaskCatchUpTicks), (82 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks.o(.text.xTaskAbortDelay), (270 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskAbortDelay), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnUnorderedEventList), (156 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.text.vTaskRemoveFromUnorderedEventList), (362 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (74 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.uxTaskGetTaskNumber), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskSetTaskNumber), (28 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskConfirmSleepModeStatus), (8 bytes).
    Removing tasks.o(.text.vTaskGetInfo), (224 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGetInfo), (8 bytes).
    Removing tasks.o(.text.prvTaskCheckFreeStackSpace), (48 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace), (8 bytes).
    Removing tasks.o(.text.uxTaskGetStackHighWaterMark2), (60 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark2), (8 bytes).
    Removing tasks.o(.text.uxTaskGetStackHighWaterMark), (56 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandle), (20 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.text.uxTaskResetEventItemValue), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyTake), (248 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyWait), (280 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (558 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (668 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskGenericNotifyGiveFromISR), (498 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyStateClear), (120 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyValueClear), (82 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseTaskLists), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvGetExpectedIdleTime), (8 bytes).
    Removing timers.o(.text), (0 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateTimerTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvTimerTask), (8 bytes).
    Removing timers.o(.text.xTimerCreate), (74 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreate), (8 bytes).
    Removing timers.o(.text.prvInitialiseNewTimer), (110 bytes).
    Removing timers.o(.ARM.exidx.text.prvInitialiseNewTimer), (8 bytes).
    Removing timers.o(.text.xTimerGenericCommand), (176 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGenericCommand), (8 bytes).
    Removing timers.o(.text.xTimerGetTimerDaemonTaskHandle), (52 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle), (8 bytes).
    Removing timers.o(.text.xTimerGetPeriod), (44 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetPeriod), (8 bytes).
    Removing timers.o(.text.vTimerSetReloadMode), (90 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetReloadMode), (78 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.uxTimerGetReloadMode), (16 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetExpiryTime), (48 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetExpiryTime), (8 bytes).
    Removing timers.o(.text.pcTimerGetName), (44 bytes).
    Removing timers.o(.ARM.exidx.text.pcTimerGetName), (8 bytes).
    Removing timers.o(.text.xTimerIsTimerActive), (76 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerIsTimerActive), (8 bytes).
    Removing timers.o(.text.pvTimerGetTimerID), (58 bytes).
    Removing timers.o(.ARM.exidx.text.pvTimerGetTimerID), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerID), (58 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerID), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCallFromISR), (58 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCall), (94 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCall), (8 bytes).
    Removing timers.o(.text.uxTimerGetTimerNumber), (12 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetTimerNumber), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerNumber), (16 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerNumber), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvGetNextExpireTime), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessReceivedCommands), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSampleTimeNow), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessExpiredTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSwitchTimerLists), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvReloadTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvInsertTimerInActiveList), (8 bytes).

334 unused section(s) (total 14530 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset4.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../clib/string.c                         0x00000000   Number         0  strlen.o ABSOLUTE
    ../fplib/daddsub.s                       0x00000000   Number         0  daddsub_clz.o ABSOLUTE
    ../fplib/ddiv.s                          0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/dfix.s                          0x00000000   Number         0  dfix.o ABSOLUTE
    ../fplib/dfixu.s                         0x00000000   Number         0  dfixu.o ABSOLUTE
    ../fplib/dflt.s                          0x00000000   Number         0  dflt_clz.o ABSOLUTE
    ../fplib/dmul.s                          0x00000000   Number         0  dmul.o ABSOLUTE
    ../fplib/dnaninf.s                       0x00000000   Number         0  dnaninf.o ABSOLUTE
    ../fplib/dretinf.s                       0x00000000   Number         0  dretinf.o ABSOLUTE
    ../fplib/f2d.s                           0x00000000   Number         0  f2d.o ABSOLUTE
    ../fplib/fnaninf.s                       0x00000000   Number         0  fnaninf.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    ../fplib/usenofp.s                       0x00000000   Number         0  usenofp.o ABSOLUTE
    ADC.c                                    0x00000000   Number         0  adc.o ABSOLUTE
    DIO.c                                    0x00000000   Number         0  dio.o ABSOLUTE
    Delay.c                                  0x00000000   Number         0  delay.o ABSOLUTE
    LCD.c                                    0x00000000   Number         0  lcd.o ABSOLUTE
    Motor.c                                  0x00000000   Number         0  motor.o ABSOLUTE
    PWM.c                                    0x00000000   Number         0  pwm.o ABSOLUTE
    PushButton.c                             0x00000000   Number         0  pushbutton.o ABSOLUTE
    RTE/Device/TM4C123GH6PM/startup_TM4C123.s 0x00000000   Number         0  startup_tm4c123.o ABSOLUTE
    SWC1.c                                   0x00000000   Number         0  swc1.o ABSOLUTE
    SWC2.c                                   0x00000000   Number         0  swc2.o ABSOLUTE
    SWC3.c                                   0x00000000   Number         0  swc3.o ABSOLUTE
    SWC4.c                                   0x00000000   Number         0  swc4.o ABSOLUTE
    Sensor.c                                 0x00000000   Number         0  sensor.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    freertos_evr.c                           0x00000000   Number         0  freertos_evr.o ABSOLUTE
    gptm.c                                   0x00000000   Number         0  gptm.o ABSOLUTE
    heap_1.c                                 0x00000000   Number         0  heap_1.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    system_TM4C123.c                         0x00000000   Number         0  system_tm4c123.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    timers.c                                 0x00000000   Number         0  timers.o ABSOLUTE
    ultrasonic.c                             0x00000000   Number         0  ultrasonic.o ABSOLUTE
    RESET                                    0x00000000   Section      620  startup_tm4c123.o(RESET)
    !!!main                                  0x0000026c   Section        8  __main.o(!!!main)
    !!!scatter                               0x00000274   Section       52  __scatter.o(!!!scatter)
    !!handler_copy                           0x000002a8   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x000002c4   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x000002e0   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000001          0x000002e2   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000001)
    .ARM.Collect$$libinit$$00000004          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000006          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$0000000C          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000010          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    .ARM.Collect$$libinit$$00000013          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$00000027          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    .ARM.Collect$$libinit$$0000002E          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000034          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    .ARM.Collect$$libinit$$00000035          0x000002e6   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000035)
    .ARM.Collect$$libshutdown$$00000000      0x000002e8   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x000002ea   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x000002ea   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x000002ea   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x000002ea   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x000002ea   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x000002ea   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x000002ea   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x000002ec   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x000002ec   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x000002ec   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x000002f2   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x000002f2   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x000002f6   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x000002f6   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x000002fe   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x00000300   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x00000300   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x00000304   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    $v0                                      0x0000030c   Number         0  startup_tm4c123.o(.text)
    .text                                    0x0000030c   Section      276  startup_tm4c123.o(.text)
    .text                                    0x00000420   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x000004aa   Section       16  aeabi_memset4.o(.text)
    .text                                    0x000004ba   Section       68  rt_memclr.o(.text)
    .text                                    0x000004fe   Section        0  heapauxi.o(.text)
    .text                                    0x00000504   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x00000568   Section       78  rt_memclr_w.o(.text)
    .text                                    0x000005b6   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x00000600   Section        0  exit.o(.text)
    .text                                    0x00000614   Section        8  libspace.o(.text)
    .text                                    0x0000061c   Section        0  sys_exit.o(.text)
    .text                                    0x00000628   Section        2  use_no_semi.o(.text)
    .text                                    0x0000062a   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x0000062c   Section        0  adc.o(.text.ADC_Init)
    [Anonymous Symbol]                       0x000009c8   Section        0  adc.o(.text.ADC_Init_TS)
    [Anonymous Symbol]                       0x00000a60   Section        0  adc.o(.text.ADC_Read)
    [Anonymous Symbol]                       0x00000c10   Section        0  adc.o(.text.ADC_Read_TS)
    ADC_sequencer_EN                         0x00000cf1   Thumb Code   320  adc.o(.text.ADC_sequencer_EN)
    [Anonymous Symbol]                       0x00000cf0   Section        0  adc.o(.text.ADC_sequencer_EN)
    [Anonymous Symbol]                       0x00000e30   Section        0  dio.o(.text.DIO_Init)
    [Anonymous Symbol]                       0x00001330   Section        0  dio.o(.text.DIO_ReadPin)
    [Anonymous Symbol]                       0x00001414   Section        0  dio.o(.text.DIO_WritePin)
    [Anonymous Symbol]                       0x000015c0   Section        0  dio.o(.text.DIO_WritePort)
    [Anonymous Symbol]                       0x00001638   Section        0  pushbutton.o(.text.GET_Start_Button)
    [Anonymous Symbol]                       0x00001668   Section        0  lcd.o(.text.LCD_Clear)
    [Anonymous Symbol]                       0x00001674   Section        0  lcd.o(.text.LCD_Cmd)
    [Anonymous Symbol]                       0x000016c0   Section        0  lcd.o(.text.LCD_GoTo)
    [Anonymous Symbol]                       0x000016f8   Section        0  lcd.o(.text.LCD_GoToString)
    [Anonymous Symbol]                       0x00001758   Section        0  lcd.o(.text.LCD_Init)
    [Anonymous Symbol]                       0x000017a4   Section        0  swc4.o(.text.LCD_Print)
    [Anonymous Symbol]                       0x000018ec   Section        0  lcd.o(.text.LCD_SendChar)
    [Anonymous Symbol]                       0x00001944   Section        0  lcd.o(.text.LCD_SendString)
    [Anonymous Symbol]                       0x00001970   Section        0  lcd.o(.text.LCD_Write_Int)
    [Anonymous Symbol]                       0x000019f4   Section        0  swc2.o(.text.LDR_Read)
    [Anonymous Symbol]                       0x00001a6c   Section        0  swc3.o(.text.LDR_Update)
    [Anonymous Symbol]                       0x00001bd4   Section        0  sensor.o(.text.LdrLeft_Init)
    [Anonymous Symbol]                       0x00001be4   Section        0  sensor.o(.text.LdrLeft_Read)
    [Anonymous Symbol]                       0x00001bf4   Section        0  sensor.o(.text.LdrRight_Init)
    [Anonymous Symbol]                       0x00001c04   Section        0  sensor.o(.text.LdrRight_Read)
    [Anonymous Symbol]                       0x00001c14   Section        0  swc1.o(.text.ModulesInit)
    [Anonymous Symbol]                       0x00001c40   Section        0  motor.o(.text.Motors_Init)
    [Anonymous Symbol]                       0x00001c54   Section        0  motor.o(.text.Motors_get_direction)
    [Anonymous Symbol]                       0x00001c60   Section        0  motor.o(.text.Motors_set_direction)
    [Anonymous Symbol]                       0x00001dec   Section        0  pwm.o(.text.PWM_INIT)
    [Anonymous Symbol]                       0x00001f24   Section        0  pwm.o(.text.PWM_set_DC)
    [Anonymous Symbol]                       0x00001f90   Section        0  port.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x00001ff0   Number         0  port.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x00001ff4   Section        0  pushbutton.o(.text.PushButton_INIT)
    [Anonymous Symbol]                       0x00002000   Section        0  port.o(.text.SVC_Handler)
    pxCurrentTCBConst2                       0x00002020   Number         0  port.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x00002024   Section        0  swc1.o(.text.SwitchCheck)
    [Anonymous Symbol]                       0x000020b4   Section        0  port.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x000020f0   Section        0  system_tm4c123.o(.text.SystemInit)
    [Anonymous Symbol]                       0x000021fc   Section        0  sensor.o(.text.TS_Init)
    [Anonymous Symbol]                       0x00002208   Section        0  sensor.o(.text.TS_Read)
    [Anonymous Symbol]                       0x00002220   Section        0  swc3.o(.text.TS_Update)
    [Anonymous Symbol]                       0x00002258   Section        0  swc2.o(.text.TempSensor_Read)
    [Anonymous Symbol]                       0x000022d0   Section        0  swc2.o(.text.Ultrasonic_Read)
    [Anonymous Symbol]                       0x00002330   Section        0  swc3.o(.text.Ultrasonic_Update)
    [Anonymous Symbol]                       0x000024a0   Section        0  delay.o(.text.delay_ms)
    [Anonymous Symbol]                       0x000024e0   Section        0  delay.o(.text.delay_us)
    [Anonymous Symbol]                       0x0000251c   Section        0  tasks.o(.text.eTaskConfirmSleepModeStatus)
    [Anonymous Symbol]                       0x0000259c   Section        0  gptm.o(.text.gptm_deinit)
    [Anonymous Symbol]                       0x000025ac   Section        0  gptm.o(.text.gptm_enable)
    [Anonymous Symbol]                       0x000025bc   Section        0  gptm.o(.text.gptm_get_value)
    [Anonymous Symbol]                       0x000025d0   Section        0  gptm.o(.text.gptm_init)
    [Anonymous Symbol]                       0x0000261c   Section        0  gptm.o(.text.gptm_set_value_ticks)
    [Anonymous Symbol]                       0x0000263c   Section        0  main.o(.text.main)
    prvAddCurrentTaskToDelayedList           0x00002831   Thumb Code   290  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x00002830   Section        0  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    prvAddNewTaskToReadyList                 0x00002955   Thumb Code   340  tasks.o(.text.prvAddNewTaskToReadyList)
    [Anonymous Symbol]                       0x00002954   Section        0  tasks.o(.text.prvAddNewTaskToReadyList)
    prvCheckForValidListAndQueue             0x00002aa9   Thumb Code   106  timers.o(.text.prvCheckForValidListAndQueue)
    [Anonymous Symbol]                       0x00002aa8   Section        0  timers.o(.text.prvCheckForValidListAndQueue)
    prvCheckTasksWaitingTermination          0x00002b15   Thumb Code    90  tasks.o(.text.prvCheckTasksWaitingTermination)
    [Anonymous Symbol]                       0x00002b14   Section        0  tasks.o(.text.prvCheckTasksWaitingTermination)
    prvCopyDataFromQueue                     0x00002b71   Thumb Code    66  queue.o(.text.prvCopyDataFromQueue)
    [Anonymous Symbol]                       0x00002b70   Section        0  queue.o(.text.prvCopyDataFromQueue)
    prvCopyDataToQueue                       0x00002bb5   Thumb Code   204  queue.o(.text.prvCopyDataToQueue)
    [Anonymous Symbol]                       0x00002bb4   Section        0  queue.o(.text.prvCopyDataToQueue)
    prvDeleteTCB                             0x00002c81   Thumb Code    24  tasks.o(.text.prvDeleteTCB)
    [Anonymous Symbol]                       0x00002c80   Section        0  tasks.o(.text.prvDeleteTCB)
    prvGetDisinheritPriorityAfterTimeout     0x00002c99   Thumb Code    38  queue.o(.text.prvGetDisinheritPriorityAfterTimeout)
    [Anonymous Symbol]                       0x00002c98   Section        0  queue.o(.text.prvGetDisinheritPriorityAfterTimeout)
    prvGetExpectedIdleTime                   0x00002cc1   Thumb Code   124  tasks.o(.text.prvGetExpectedIdleTime)
    [Anonymous Symbol]                       0x00002cc0   Section        0  tasks.o(.text.prvGetExpectedIdleTime)
    prvGetNextExpireTime                     0x00002d3d   Thumb Code    64  timers.o(.text.prvGetNextExpireTime)
    [Anonymous Symbol]                       0x00002d3c   Section        0  timers.o(.text.prvGetNextExpireTime)
    prvIdleTask                              0x00002d7d   Thumb Code   154  tasks.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x00002d7c   Section        0  tasks.o(.text.prvIdleTask)
    prvInitialiseNewQueue                    0x00002e19   Thumb Code    78  queue.o(.text.prvInitialiseNewQueue)
    [Anonymous Symbol]                       0x00002e18   Section        0  queue.o(.text.prvInitialiseNewQueue)
    prvInitialiseNewTask                     0x00002e69   Thumb Code   292  tasks.o(.text.prvInitialiseNewTask)
    [Anonymous Symbol]                       0x00002e68   Section        0  tasks.o(.text.prvInitialiseNewTask)
    prvInitialiseTaskLists                   0x00002f8d   Thumb Code   142  tasks.o(.text.prvInitialiseTaskLists)
    [Anonymous Symbol]                       0x00002f8c   Section        0  tasks.o(.text.prvInitialiseTaskLists)
    prvInsertTimerInActiveList               0x0000301d   Thumb Code   134  timers.o(.text.prvInsertTimerInActiveList)
    [Anonymous Symbol]                       0x0000301c   Section        0  timers.o(.text.prvInsertTimerInActiveList)
    prvIsQueueEmpty                          0x000030a5   Thumb Code    40  queue.o(.text.prvIsQueueEmpty)
    [Anonymous Symbol]                       0x000030a4   Section        0  queue.o(.text.prvIsQueueEmpty)
    prvIsQueueFull                           0x000030cd   Thumb Code    46  queue.o(.text.prvIsQueueFull)
    [Anonymous Symbol]                       0x000030cc   Section        0  queue.o(.text.prvIsQueueFull)
    prvNotifyQueueSetContainer               0x000030fd   Thumb Code   236  queue.o(.text.prvNotifyQueueSetContainer)
    [Anonymous Symbol]                       0x000030fc   Section        0  queue.o(.text.prvNotifyQueueSetContainer)
    prvPortStartFirstTask                    0x000031e9   Thumb Code    40  port.o(.text.prvPortStartFirstTask)
    [Anonymous Symbol]                       0x000031e8   Section        0  port.o(.text.prvPortStartFirstTask)
    prvProcessExpiredTimer                   0x00003211   Thumb Code    84  timers.o(.text.prvProcessExpiredTimer)
    [Anonymous Symbol]                       0x00003210   Section        0  timers.o(.text.prvProcessExpiredTimer)
    prvProcessReceivedCommands               0x00003265   Thumb Code   384  timers.o(.text.prvProcessReceivedCommands)
    [Anonymous Symbol]                       0x00003264   Section        0  timers.o(.text.prvProcessReceivedCommands)
    prvProcessTimerOrBlockTask               0x000033e5   Thumb Code   154  timers.o(.text.prvProcessTimerOrBlockTask)
    [Anonymous Symbol]                       0x000033e4   Section        0  timers.o(.text.prvProcessTimerOrBlockTask)
    prvReloadTimer                           0x00003481   Thumb Code    52  timers.o(.text.prvReloadTimer)
    [Anonymous Symbol]                       0x00003480   Section        0  timers.o(.text.prvReloadTimer)
    prvResetNextTaskUnblockTime              0x000034b5   Thumb Code    60  tasks.o(.text.prvResetNextTaskUnblockTime)
    [Anonymous Symbol]                       0x000034b4   Section        0  tasks.o(.text.prvResetNextTaskUnblockTime)
    prvSampleTimeNow                         0x000034f1   Thumb Code    68  timers.o(.text.prvSampleTimeNow)
    [Anonymous Symbol]                       0x000034f0   Section        0  timers.o(.text.prvSampleTimeNow)
    prvSwitchTimerLists                      0x00003535   Thumb Code    82  timers.o(.text.prvSwitchTimerLists)
    [Anonymous Symbol]                       0x00003534   Section        0  timers.o(.text.prvSwitchTimerLists)
    prvTaskExitError                         0x00003589   Thumb Code    76  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x00003588   Section        0  port.o(.text.prvTaskExitError)
    prvTaskIsTaskSuspended                   0x000035d5   Thumb Code   106  tasks.o(.text.prvTaskIsTaskSuspended)
    [Anonymous Symbol]                       0x000035d4   Section        0  tasks.o(.text.prvTaskIsTaskSuspended)
    prvTimerTask                             0x00003641   Thumb Code    30  timers.o(.text.prvTimerTask)
    [Anonymous Symbol]                       0x00003640   Section        0  timers.o(.text.prvTimerTask)
    prvUnlockQueue                           0x00003661   Thumb Code   204  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00003660   Section        0  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x0000372c   Section        0  heap_1.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x000037ec   Section        0  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    [Anonymous Symbol]                       0x00003818   Section        0  port.o(.text.pxPortInitialiseStack)
    [Anonymous Symbol]                       0x00003878   Section        0  ultrasonic.o(.text.ultarsonic_get_value)
    [Anonymous Symbol]                       0x00003990   Section        0  ultrasonic.o(.text.ultarsonic_init)
    [Anonymous Symbol]                       0x000039a8   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x000039f0   Section        0  tasks.o(.text.uxTaskGetNumberOfTasks)
    [Anonymous Symbol]                       0x000039fc   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x00003a2c   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x00003a3c   Section        0  list.o(.text.vListInsert)
    [Anonymous Symbol]                       0x00003aa8   Section        0  list.o(.text.vListInsertEnd)
    vPortEnableVFP                           0x00003ae5   Thumb Code    20  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x00003ae4   Section        0  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x00003af8   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x00003b50   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x00003b9c   Section        0  heap_1.o(.text.vPortFree)
    [Anonymous Symbol]                       0x00003bc0   Section        0  port.o(.text.vPortSetupTimerInterrupt)
    [Anonymous Symbol]                       0x00003c38   Section        0  port.o(.text.vPortSuppressTicksAndSleep)
    [Anonymous Symbol]                       0x00003e58   Section        0  queue.o(.text.vQueueWaitForMessageRestricted)
    [Anonymous Symbol]                       0x00003ebc   Section        0  tasks.o(.text.vTaskInternalSetTimeOutState)
    [Anonymous Symbol]                       0x00003ee0   Section        0  tasks.o(.text.vTaskMissedYield)
    [Anonymous Symbol]                       0x00003ef0   Section        0  tasks.o(.text.vTaskPlaceOnEventList)
    [Anonymous Symbol]                       0x00003f34   Section        0  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    [Anonymous Symbol]                       0x00003fb0   Section        0  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    [Anonymous Symbol]                       0x00004134   Section        0  tasks.o(.text.vTaskResume)
    [Anonymous Symbol]                       0x0000423c   Section        0  tasks.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x000042f0   Section        0  tasks.o(.text.vTaskStepTick)
    [Anonymous Symbol]                       0x000043bc   Section        0  tasks.o(.text.vTaskSuspend)
    [Anonymous Symbol]                       0x00004538   Section        0  tasks.o(.text.vTaskSuspendAll)
    __tagsym$$used.0                         0x00004548   Number         0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x00004548   Section        0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x00004608   Section        0  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x00004760   Section        0  queue.o(.text.xQueueGenericCreate)
    [Anonymous Symbol]                       0x000047fc   Section        0  queue.o(.text.xQueueGenericReset)
    [Anonymous Symbol]                       0x00004904   Section        0  queue.o(.text.xQueueGenericSend)
    [Anonymous Symbol]                       0x00004b78   Section        0  queue.o(.text.xQueueReceive)
    [Anonymous Symbol]                       0x00004d54   Section        0  queue.o(.text.xQueueSemaphoreTake)
    [Anonymous Symbol]                       0x00004f64   Section        0  tasks.o(.text.xTaskCheckForTimeOut)
    [Anonymous Symbol]                       0x00005060   Section        0  tasks.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x00005100   Section        0  tasks.o(.text.xTaskDelayUntil)
    [Anonymous Symbol]                       0x00005218   Section        0  tasks.o(.text.xTaskGetSchedulerState)
    [Anonymous Symbol]                       0x00005250   Section        0  tasks.o(.text.xTaskGetTickCount)
    [Anonymous Symbol]                       0x00005264   Section        0  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x000054c4   Section        0  tasks.o(.text.xTaskPriorityDisinherit)
    [Anonymous Symbol]                       0x000055fc   Section        0  tasks.o(.text.xTaskPriorityInherit)
    [Anonymous Symbol]                       0x00005758   Section        0  tasks.o(.text.xTaskRemoveFromEventList)
    [Anonymous Symbol]                       0x000058ec   Section        0  tasks.o(.text.xTaskResumeAll)
    [Anonymous Symbol]                       0x00005b10   Section        0  timers.o(.text.xTimerCreateTimerTask)
    $v0                                      0x00005b7c   Number         0  daddsub_clz.o(x$fpl$dadd)
    x$fpl$dadd                               0x00005b7c   Section      336  daddsub_clz.o(x$fpl$dadd)
    _dadd1                                   0x00005b8d   Thumb Code     0  daddsub_clz.o(x$fpl$dadd)
    $v0                                      0x00005ccc   Number         0  ddiv.o(x$fpl$ddiv)
    x$fpl$ddiv                               0x00005ccc   Section      692  ddiv.o(x$fpl$ddiv)
    ddiv_entry                               0x00005cd3   Thumb Code     0  ddiv.o(x$fpl$ddiv)
    $v0                                      0x00005f80   Number         0  dfix.o(x$fpl$dfix)
    x$fpl$dfix                               0x00005f80   Section       94  dfix.o(x$fpl$dfix)
    $v0                                      0x00005fe0   Number         0  dfixu.o(x$fpl$dfixu)
    x$fpl$dfixu                              0x00005fe0   Section       90  dfixu.o(x$fpl$dfixu)
    $v0                                      0x0000603a   Number         0  dflt_clz.o(x$fpl$dfltu)
    x$fpl$dfltu                              0x0000603a   Section       38  dflt_clz.o(x$fpl$dfltu)
    $v0                                      0x00006060   Number         0  dmul.o(x$fpl$dmul)
    x$fpl$dmul                               0x00006060   Section      340  dmul.o(x$fpl$dmul)
    $v0                                      0x000061b4   Number         0  dnaninf.o(x$fpl$dnaninf)
    x$fpl$dnaninf                            0x000061b4   Section      156  dnaninf.o(x$fpl$dnaninf)
    $v0                                      0x00006250   Number         0  dretinf.o(x$fpl$dretinf)
    x$fpl$dretinf                            0x00006250   Section       12  dretinf.o(x$fpl$dretinf)
    $v0                                      0x0000625c   Number         0  daddsub_clz.o(x$fpl$dsub)
    x$fpl$dsub                               0x0000625c   Section      476  daddsub_clz.o(x$fpl$dsub)
    _dsub1                                   0x0000626d   Thumb Code     0  daddsub_clz.o(x$fpl$dsub)
    $v0                                      0x00006438   Number         0  f2d.o(x$fpl$f2d)
    x$fpl$f2d                                0x00006438   Section       86  f2d.o(x$fpl$f2d)
    $v0                                      0x0000648e   Number         0  fnaninf.o(x$fpl$fnaninf)
    x$fpl$fnaninf                            0x0000648e   Section      140  fnaninf.o(x$fpl$fnaninf)
    $v0                                      0x0000651a   Number         0  fpinit.o(x$fpl$fpinit)
    x$fpl$fpinit                             0x0000651a   Section       26  fpinit.o(x$fpl$fpinit)
    x$fpl$usenofp                            0x00006534   Section        0  usenofp.o(x$fpl$usenofp)
    .L.str.3                                 0x00006594   Data           9  main.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00006594   Section        0  main.o(.rodata.str1.1)
    .L.str.2                                 0x0000659d   Data          16  main.o(.rodata.str1.1)
    .L.str.4                                 0x000065ad   Data          16  main.o(.rodata.str1.1)
    .L.str.6                                 0x000065bd   Data          11  main.o(.rodata.str1.1)
    .L.str.7                                 0x000065c8   Data          10  main.o(.rodata.str1.1)
    .L.str.5                                 0x000065d2   Data          18  main.o(.rodata.str1.1)
    .L.str.1                                 0x000065e4   Data          12  main.o(.rodata.str1.1)
    .L.str                                   0x000065f0   Data          12  main.o(.rodata.str1.1)
    .L.str.8                                 0x000065fc   Data          10  main.o(.rodata.str1.1)
    .L.str                                   0x00006606   Data          10  swc1.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00006606   Section        0  swc1.o(.rodata.str1.1)
    .L.str.1                                 0x00006610   Data           5  swc1.o(.rodata.str1.1)
    .L.str.2                                 0x00006615   Data           9  swc1.o(.rodata.str1.1)
    .L.str                                   0x0000661e   Data          16  swc3.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x0000661e   Section        0  swc3.o(.rodata.str1.1)
    .L.str.2                                 0x0000662e   Data           7  swc4.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x0000662e   Section        0  swc4.o(.rodata.str1.1)
    .L.str                                   0x0000662f   Data           6  swc4.o(.rodata.str1.1)
    .L.str.1                                 0x00006635   Data           6  swc4.o(.rodata.str1.1)
    .L.str.3                                 0x0000663b   Data           7  swc4.o(.rodata.str1.1)
    .L.str.5                                 0x00006642   Data           5  swc4.o(.rodata.str1.1)
    .L.str.4                                 0x00006647   Data           6  swc4.o(.rodata.str1.1)
    .L.str                                   0x0000664d   Data           5  tasks.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x0000664d   Section        0  tasks.o(.rodata.str1.1)
    .L.str                                   0x00006652   Data           8  timers.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00006652   Section        0  timers.o(.rodata.str1.1)
    uxCriticalNesting                        0x2000000c   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x2000000c   Section        0  port.o(.data.uxCriticalNesting)
    .bss                                     0x20000010   Section       96  libspace.o(.bss)
    prvSampleTimeNow.xLastTime               0x20000080   Data           4  timers.o(.bss.prvSampleTimeNow.xLastTime)
    [Anonymous Symbol]                       0x20000080   Section        0  timers.o(.bss.prvSampleTimeNow.xLastTime)
    pvPortMalloc.pucAlignedHeap              0x20000084   Data           4  heap_1.o(.bss.pvPortMalloc.pucAlignedHeap)
    [Anonymous Symbol]                       0x20000084   Section        0  heap_1.o(.bss.pvPortMalloc.pucAlignedHeap)
    __tagsym$$used.1                         0x20000088   Number         0  tasks.o(.bss.pxCurrentTCB)
    pxCurrentTimerList                       0x2000008c   Data           4  timers.o(.bss.pxCurrentTimerList)
    [Anonymous Symbol]                       0x2000008c   Section        0  timers.o(.bss.pxCurrentTimerList)
    pxDelayedTaskList                        0x20000090   Data           4  tasks.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x20000090   Section        0  tasks.o(.bss.pxDelayedTaskList)
    pxOverflowDelayedTaskList                0x20000094   Data           4  tasks.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x20000094   Section        0  tasks.o(.bss.pxOverflowDelayedTaskList)
    pxOverflowTimerList                      0x20000098   Data           4  timers.o(.bss.pxOverflowTimerList)
    [Anonymous Symbol]                       0x20000098   Section        0  timers.o(.bss.pxOverflowTimerList)
    pxReadyTasksLists                        0x2000009c   Data         200  tasks.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x2000009c   Section        0  tasks.o(.bss.pxReadyTasksLists)
    ucHeap                                   0x20000164   Data        8192  heap_1.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x20000164   Section        0  heap_1.o(.bss.ucHeap)
    ucMaxSysCallPriority                     0x20002164   Data           1  port.o(.bss.ucMaxSysCallPriority)
    [Anonymous Symbol]                       0x20002164   Section        0  port.o(.bss.ucMaxSysCallPriority)
    ulMaxPRIGROUPValue                       0x20002168   Data           4  port.o(.bss.ulMaxPRIGROUPValue)
    [Anonymous Symbol]                       0x20002168   Section        0  port.o(.bss.ulMaxPRIGROUPValue)
    ulStoppedTimerCompensation               0x2000216c   Data           4  port.o(.bss.ulStoppedTimerCompensation)
    [Anonymous Symbol]                       0x2000216c   Section        0  port.o(.bss.ulStoppedTimerCompensation)
    ulTimerCountsForOneTick                  0x20002170   Data           4  port.o(.bss.ulTimerCountsForOneTick)
    [Anonymous Symbol]                       0x20002170   Section        0  port.o(.bss.ulTimerCountsForOneTick)
    uxCurrentNumberOfTasks                   0x20002174   Data           4  tasks.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x20002174   Section        0  tasks.o(.bss.uxCurrentNumberOfTasks)
    uxDeletedTasksWaitingCleanUp             0x20002178   Data           4  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    [Anonymous Symbol]                       0x20002178   Section        0  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    uxSchedulerSuspended                     0x2000217c   Data           4  tasks.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x2000217c   Section        0  tasks.o(.bss.uxSchedulerSuspended)
    uxTaskNumber                             0x20002180   Data           4  tasks.o(.bss.uxTaskNumber)
    [Anonymous Symbol]                       0x20002180   Section        0  tasks.o(.bss.uxTaskNumber)
    uxTopReadyPriority                       0x20002184   Data           4  tasks.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x20002184   Section        0  tasks.o(.bss.uxTopReadyPriority)
    xActiveTimerList1                        0x20002188   Data          20  timers.o(.bss.xActiveTimerList1)
    [Anonymous Symbol]                       0x20002188   Section        0  timers.o(.bss.xActiveTimerList1)
    xActiveTimerList2                        0x2000219c   Data          20  timers.o(.bss.xActiveTimerList2)
    [Anonymous Symbol]                       0x2000219c   Section        0  timers.o(.bss.xActiveTimerList2)
    xDelayedTaskList1                        0x200021b0   Data          20  tasks.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x200021b0   Section        0  tasks.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x200021c4   Data          20  tasks.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x200021c4   Section        0  tasks.o(.bss.xDelayedTaskList2)
    xIdleTaskHandle                          0x200021d8   Data           4  tasks.o(.bss.xIdleTaskHandle)
    [Anonymous Symbol]                       0x200021d8   Section        0  tasks.o(.bss.xIdleTaskHandle)
    xMaximumPossibleSuppressedTicks          0x200021dc   Data           4  port.o(.bss.xMaximumPossibleSuppressedTicks)
    [Anonymous Symbol]                       0x200021dc   Section        0  port.o(.bss.xMaximumPossibleSuppressedTicks)
    xNextFreeByte                            0x200021e0   Data           4  heap_1.o(.bss.xNextFreeByte)
    [Anonymous Symbol]                       0x200021e0   Section        0  heap_1.o(.bss.xNextFreeByte)
    xNextTaskUnblockTime                     0x200021e4   Data           4  tasks.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x200021e4   Section        0  tasks.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x200021e8   Data           4  tasks.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x200021e8   Section        0  tasks.o(.bss.xNumOfOverflows)
    xPendedTicks                             0x200021ec   Data           4  tasks.o(.bss.xPendedTicks)
    [Anonymous Symbol]                       0x200021ec   Section        0  tasks.o(.bss.xPendedTicks)
    xPendingReadyList                        0x200021f0   Data          20  tasks.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x200021f0   Section        0  tasks.o(.bss.xPendingReadyList)
    xSchedulerRunning                        0x20002218   Data           4  tasks.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x20002218   Section        0  tasks.o(.bss.xSchedulerRunning)
    xSuspendedTaskList                       0x20002220   Data          20  tasks.o(.bss.xSuspendedTaskList)
    [Anonymous Symbol]                       0x20002220   Section        0  tasks.o(.bss.xSuspendedTaskList)
    xTasksWaitingTermination                 0x20002234   Data          20  tasks.o(.bss.xTasksWaitingTermination)
    [Anonymous Symbol]                       0x20002234   Section        0  tasks.o(.bss.xTasksWaitingTermination)
    xTickCount                               0x20002248   Data           4  tasks.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x20002248   Section        0  tasks.o(.bss.xTickCount)
    xTimerQueue                              0x2000224c   Data           4  timers.o(.bss.xTimerQueue)
    [Anonymous Symbol]                       0x2000224c   Section        0  timers.o(.bss.xTimerQueue)
    xTimerTaskHandle                         0x20002250   Data           4  timers.o(.bss.xTimerTaskHandle)
    [Anonymous Symbol]                       0x20002250   Section        0  timers.o(.bss.xTimerTaskHandle)
    xYieldPending                            0x20002254   Data           4  tasks.o(.bss.xYieldPending)
    [Anonymous Symbol]                       0x20002254   Section        0  tasks.o(.bss.xYieldPending)
    Heap_Mem                                 0x20002258   Data           0  startup_tm4c123.o(HEAP)
    Stack_Mem                                0x20002258   Data         512  startup_tm4c123.o(STACK)
    HEAP                                     0x20002258   Section        0  startup_tm4c123.o(HEAP)
    STACK                                    0x20002258   Section      512  startup_tm4c123.o(STACK)
    __initial_sp                             0x20002458   Data           0  startup_tm4c123.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_tm4c123.o(RESET)
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __arm_relocate_pie_                       - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_End                            0x0000026c   Data           0  startup_tm4c123.o(RESET)
    __Vectors_Size                           0x0000026c   Number         0  startup_tm4c123.o ABSOLUTE
    __main                                   0x0000026d   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x00000275   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x00000275   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x00000275   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x00000283   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x000002a9   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x000002c5   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x000002e1   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x000002e3   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000001)
    __rt_lib_init_alloca_1                   0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_argv_1                     0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_atexit_1                   0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_clock_1                    0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_cpp_1                      0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    __rt_lib_init_exceptions_1               0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_fp_trap_1                  0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_getenv_1                   0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_heap_1                     0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_collate_1               0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_ctype_1                 0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_monetary_1              0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_numeric_1               0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_lc_time_1                  0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_preinit_1                  0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_rand_1                     0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    __rt_lib_init_relocate_pie_1             0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_return                     0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000035)
    __rt_lib_init_signal_1                   0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_stdio_1                    0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    __rt_lib_init_user_alloc_1               0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_shutdown                        0x000002e9   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x000002ed   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x000002ed   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x000002ed   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x000002f3   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x000002f3   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x000002f7   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x000002f7   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x000002ff   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x00000301   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x00000301   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x00000305   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    Reset_Handler                            0x0000030d   Thumb Code     8  startup_tm4c123.o(.text)
    NMI_Handler                              0x00000315   Thumb Code     2  startup_tm4c123.o(.text)
    HardFault_Handler                        0x00000317   Thumb Code     2  startup_tm4c123.o(.text)
    MemManage_Handler                        0x00000319   Thumb Code     2  startup_tm4c123.o(.text)
    BusFault_Handler                         0x0000031b   Thumb Code     2  startup_tm4c123.o(.text)
    UsageFault_Handler                       0x0000031d   Thumb Code     2  startup_tm4c123.o(.text)
    DebugMon_Handler                         0x00000321   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOA_Handler                            0x00000327   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOB_Handler                            0x00000329   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOC_Handler                            0x0000032b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOD_Handler                            0x0000032d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOE_Handler                            0x0000032f   Thumb Code     2  startup_tm4c123.o(.text)
    UART0_Handler                            0x00000331   Thumb Code     2  startup_tm4c123.o(.text)
    UART1_Handler                            0x00000333   Thumb Code     2  startup_tm4c123.o(.text)
    SSI0_Handler                             0x00000335   Thumb Code     2  startup_tm4c123.o(.text)
    I2C0_Handler                             0x00000337   Thumb Code     2  startup_tm4c123.o(.text)
    PMW0_FAULT_Handler                       0x00000339   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_0_Handler                           0x0000033b   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_1_Handler                           0x0000033d   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_2_Handler                           0x0000033f   Thumb Code     2  startup_tm4c123.o(.text)
    QEI0_Handler                             0x00000341   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS0_Handler                          0x00000343   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS1_Handler                          0x00000345   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS2_Handler                          0x00000347   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS3_Handler                          0x00000349   Thumb Code     2  startup_tm4c123.o(.text)
    WDT0_Handler                             0x0000034b   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0A_Handler                          0x0000034d   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0B_Handler                          0x0000034f   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1A_Handler                          0x00000351   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1B_Handler                          0x00000353   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2A_Handler                          0x00000355   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2B_Handler                          0x00000357   Thumb Code     2  startup_tm4c123.o(.text)
    COMP0_Handler                            0x00000359   Thumb Code     2  startup_tm4c123.o(.text)
    COMP1_Handler                            0x0000035b   Thumb Code     2  startup_tm4c123.o(.text)
    COMP2_Handler                            0x0000035d   Thumb Code     2  startup_tm4c123.o(.text)
    SYSCTL_Handler                           0x0000035f   Thumb Code     2  startup_tm4c123.o(.text)
    FLASH_Handler                            0x00000361   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOF_Handler                            0x00000363   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOG_Handler                            0x00000365   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOH_Handler                            0x00000367   Thumb Code     2  startup_tm4c123.o(.text)
    UART2_Handler                            0x00000369   Thumb Code     2  startup_tm4c123.o(.text)
    SSI1_Handler                             0x0000036b   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3A_Handler                          0x0000036d   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3B_Handler                          0x0000036f   Thumb Code     2  startup_tm4c123.o(.text)
    I2C1_Handler                             0x00000371   Thumb Code     2  startup_tm4c123.o(.text)
    QEI1_Handler                             0x00000373   Thumb Code     2  startup_tm4c123.o(.text)
    CAN0_Handler                             0x00000375   Thumb Code     2  startup_tm4c123.o(.text)
    CAN1_Handler                             0x00000377   Thumb Code     2  startup_tm4c123.o(.text)
    CAN2_Handler                             0x00000379   Thumb Code     2  startup_tm4c123.o(.text)
    HIB_Handler                              0x0000037b   Thumb Code     2  startup_tm4c123.o(.text)
    USB0_Handler                             0x0000037d   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_3_Handler                           0x0000037f   Thumb Code     2  startup_tm4c123.o(.text)
    UDMA_Handler                             0x00000381   Thumb Code     2  startup_tm4c123.o(.text)
    UDMAERR_Handler                          0x00000383   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS0_Handler                          0x00000385   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS1_Handler                          0x00000387   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS2_Handler                          0x00000389   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS3_Handler                          0x0000038b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOJ_Handler                            0x0000038d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOK_Handler                            0x0000038f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOL_Handler                            0x00000391   Thumb Code     2  startup_tm4c123.o(.text)
    SSI2_Handler                             0x00000393   Thumb Code     2  startup_tm4c123.o(.text)
    SSI3_Handler                             0x00000395   Thumb Code     2  startup_tm4c123.o(.text)
    UART3_Handler                            0x00000397   Thumb Code     2  startup_tm4c123.o(.text)
    UART4_Handler                            0x00000399   Thumb Code     2  startup_tm4c123.o(.text)
    UART5_Handler                            0x0000039b   Thumb Code     2  startup_tm4c123.o(.text)
    UART6_Handler                            0x0000039d   Thumb Code     2  startup_tm4c123.o(.text)
    UART7_Handler                            0x0000039f   Thumb Code     2  startup_tm4c123.o(.text)
    I2C2_Handler                             0x000003a1   Thumb Code     2  startup_tm4c123.o(.text)
    I2C3_Handler                             0x000003a3   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4A_Handler                          0x000003a5   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4B_Handler                          0x000003a7   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5A_Handler                          0x000003a9   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5B_Handler                          0x000003ab   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0A_Handler                         0x000003ad   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0B_Handler                         0x000003af   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1A_Handler                         0x000003b1   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1B_Handler                         0x000003b3   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2A_Handler                         0x000003b5   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2B_Handler                         0x000003b7   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3A_Handler                         0x000003b9   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3B_Handler                         0x000003bb   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4A_Handler                         0x000003bd   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4B_Handler                         0x000003bf   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5A_Handler                         0x000003c1   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5B_Handler                         0x000003c3   Thumb Code     2  startup_tm4c123.o(.text)
    FPU_Handler                              0x000003c5   Thumb Code     2  startup_tm4c123.o(.text)
    I2C4_Handler                             0x000003c7   Thumb Code     2  startup_tm4c123.o(.text)
    I2C5_Handler                             0x000003c9   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOM_Handler                            0x000003cb   Thumb Code     2  startup_tm4c123.o(.text)
    GPION_Handler                            0x000003cd   Thumb Code     2  startup_tm4c123.o(.text)
    QEI2_Handler                             0x000003cf   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP0_Handler                           0x000003d1   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP1_Handler                           0x000003d3   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP2_Handler                           0x000003d5   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP3_Handler                           0x000003d7   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP4_Handler                           0x000003d9   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP5_Handler                           0x000003db   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP6_Handler                           0x000003dd   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP7_Handler                           0x000003df   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ0_Handler                           0x000003e1   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ1_Handler                           0x000003e3   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ2_Handler                           0x000003e5   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ3_Handler                           0x000003e7   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ4_Handler                           0x000003e9   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ5_Handler                           0x000003eb   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ6_Handler                           0x000003ed   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ7_Handler                           0x000003ef   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOR_Handler                            0x000003f1   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOS_Handler                            0x000003f3   Thumb Code     2  startup_tm4c123.o(.text)
    PMW1_0_Handler                           0x000003f5   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_1_Handler                           0x000003f7   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_2_Handler                           0x000003f9   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_3_Handler                           0x000003fb   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_FAULT_Handler                       0x000003fd   Thumb Code     2  startup_tm4c123.o(.text)
    __user_initial_stackheap                 0x00000401   Thumb Code     0  startup_tm4c123.o(.text)
    __aeabi_memcpy                           0x00000421   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x00000421   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x00000487   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memset4                          0x000004ab   Thumb Code    16  aeabi_memset4.o(.text)
    __aeabi_memset8                          0x000004ab   Thumb Code     0  aeabi_memset4.o(.text)
    __aeabi_memclr                           0x000004bb   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x000004bb   Thumb Code     0  rt_memclr.o(.text)
    _memset                                  0x000004bf   Thumb Code    64  rt_memclr.o(.text)
    __use_two_region_memory                  0x000004ff   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x00000501   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x00000503   Thumb Code     2  heapauxi.o(.text)
    __aeabi_memcpy4                          0x00000505   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x00000505   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x00000505   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x0000054d   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memclr4                          0x00000569   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x00000569   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x00000569   Thumb Code     0  rt_memclr_w.o(.text)
    _memset_w                                0x0000056d   Thumb Code    74  rt_memclr_w.o(.text)
    __user_setup_stackheap                   0x000005b7   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x00000601   Thumb Code    18  exit.o(.text)
    __user_libspace                          0x00000615   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x00000615   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x00000615   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x0000061d   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x00000629   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x00000629   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x0000062b   Thumb Code     0  indicate_semi.o(.text)
    ADC_Init                                 0x0000062d   Thumb Code   924  adc.o(.text.ADC_Init)
    ADC_Init_TS                              0x000009c9   Thumb Code   150  adc.o(.text.ADC_Init_TS)
    ADC_Read                                 0x00000a61   Thumb Code   432  adc.o(.text.ADC_Read)
    ADC_Read_TS                              0x00000c11   Thumb Code   224  adc.o(.text.ADC_Read_TS)
    DIO_Init                                 0x00000e31   Thumb Code  1280  dio.o(.text.DIO_Init)
    DIO_ReadPin                              0x00001331   Thumb Code   228  dio.o(.text.DIO_ReadPin)
    DIO_WritePin                             0x00001415   Thumb Code   428  dio.o(.text.DIO_WritePin)
    DIO_WritePort                            0x000015c1   Thumb Code   120  dio.o(.text.DIO_WritePort)
    GET_Start_Button                         0x00001639   Thumb Code    46  pushbutton.o(.text.GET_Start_Button)
    LCD_Clear                                0x00001669   Thumb Code    10  lcd.o(.text.LCD_Clear)
    LCD_Cmd                                  0x00001675   Thumb Code    76  lcd.o(.text.LCD_Cmd)
    LCD_GoTo                                 0x000016c1   Thumb Code    56  lcd.o(.text.LCD_GoTo)
    LCD_GoToString                           0x000016f9   Thumb Code    94  lcd.o(.text.LCD_GoToString)
    LCD_Init                                 0x00001759   Thumb Code    76  lcd.o(.text.LCD_Init)
    LCD_Print                                0x000017a5   Thumb Code   326  swc4.o(.text.LCD_Print)
    LCD_SendChar                             0x000018ed   Thumb Code    86  lcd.o(.text.LCD_SendChar)
    LCD_SendString                           0x00001945   Thumb Code    44  lcd.o(.text.LCD_SendString)
    LCD_Write_Int                            0x00001971   Thumb Code   132  lcd.o(.text.LCD_Write_Int)
    LDR_Read                                 0x000019f5   Thumb Code   120  swc2.o(.text.LDR_Read)
    LDR_Update                               0x00001a6d   Thumb Code   360  swc3.o(.text.LDR_Update)
    LdrLeft_Init                             0x00001bd5   Thumb Code    16  sensor.o(.text.LdrLeft_Init)
    LdrLeft_Read                             0x00001be5   Thumb Code    14  sensor.o(.text.LdrLeft_Read)
    LdrRight_Init                            0x00001bf5   Thumb Code    16  sensor.o(.text.LdrRight_Init)
    LdrRight_Read                            0x00001c05   Thumb Code    14  sensor.o(.text.LdrRight_Read)
    ModulesInit                              0x00001c15   Thumb Code    44  swc1.o(.text.ModulesInit)
    Motors_Init                              0x00001c41   Thumb Code    18  motor.o(.text.Motors_Init)
    Motors_get_direction                     0x00001c55   Thumb Code    12  motor.o(.text.Motors_get_direction)
    Motors_set_direction                     0x00001c61   Thumb Code   396  motor.o(.text.Motors_set_direction)
    PWM_INIT                                 0x00001ded   Thumb Code   312  pwm.o(.text.PWM_INIT)
    PWM_set_DC                               0x00001f25   Thumb Code    94  pwm.o(.text.PWM_set_DC)
    PendSV_Handler                           0x00001f91   Thumb Code   100  port.o(.text.PendSV_Handler)
    PushButton_INIT                          0x00001ff5   Thumb Code     8  pushbutton.o(.text.PushButton_INIT)
    SVC_Handler                              0x00002001   Thumb Code    36  port.o(.text.SVC_Handler)
    SwitchCheck                              0x00002025   Thumb Code   142  swc1.o(.text.SwitchCheck)
    SysTick_Handler                          0x000020b5   Thumb Code    60  port.o(.text.SysTick_Handler)
    SystemInit                               0x000020f1   Thumb Code   268  system_tm4c123.o(.text.SystemInit)
    TS_Init                                  0x000021fd   Thumb Code    12  sensor.o(.text.TS_Init)
    TS_Read                                  0x00002209   Thumb Code    22  sensor.o(.text.TS_Read)
    TS_Update                                0x00002221   Thumb Code    54  swc3.o(.text.TS_Update)
    TempSensor_Read                          0x00002259   Thumb Code   120  swc2.o(.text.TempSensor_Read)
    Ultrasonic_Read                          0x000022d1   Thumb Code    94  swc2.o(.text.Ultrasonic_Read)
    Ultrasonic_Update                        0x00002331   Thumb Code   368  swc3.o(.text.Ultrasonic_Update)
    delay_ms                                 0x000024a1   Thumb Code    62  delay.o(.text.delay_ms)
    delay_us                                 0x000024e1   Thumb Code    58  delay.o(.text.delay_us)
    eTaskConfirmSleepModeStatus              0x0000251d   Thumb Code   128  tasks.o(.text.eTaskConfirmSleepModeStatus)
    gptm_deinit                              0x0000259d   Thumb Code    16  gptm.o(.text.gptm_deinit)
    gptm_enable                              0x000025ad   Thumb Code    16  gptm.o(.text.gptm_enable)
    gptm_get_value                           0x000025bd   Thumb Code    18  gptm.o(.text.gptm_get_value)
    gptm_init                                0x000025d1   Thumb Code    74  gptm.o(.text.gptm_init)
    gptm_set_value_ticks                     0x0000261d   Thumb Code    32  gptm.o(.text.gptm_set_value_ticks)
    main                                     0x0000263d   Thumb Code   500  main.o(.text.main)
    pvPortMalloc                             0x0000372d   Thumb Code   192  heap_1.o(.text.pvPortMalloc)
    pvTaskIncrementMutexHeldCount            0x000037ed   Thumb Code    44  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    pxPortInitialiseStack                    0x00003819   Thumb Code    94  port.o(.text.pxPortInitialiseStack)
    ultarsonic_get_value                     0x00003879   Thumb Code   280  ultrasonic.o(.text.ultarsonic_get_value)
    ultarsonic_init                          0x00003991   Thumb Code    22  ultrasonic.o(.text.ultarsonic_init)
    uxListRemove                             0x000039a9   Thumb Code    72  list.o(.text.uxListRemove)
    uxTaskGetNumberOfTasks                   0x000039f1   Thumb Code    12  tasks.o(.text.uxTaskGetNumberOfTasks)
    vListInitialise                          0x000039fd   Thumb Code    46  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x00003a2d   Thumb Code    14  list.o(.text.vListInitialiseItem)
    vListInsert                              0x00003a3d   Thumb Code   106  list.o(.text.vListInsert)
    vListInsertEnd                           0x00003aa9   Thumb Code    58  list.o(.text.vListInsertEnd)
    vPortEnterCritical                       0x00003af9   Thumb Code    86  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x00003b51   Thumb Code    74  port.o(.text.vPortExitCritical)
    vPortFree                                0x00003b9d   Thumb Code    36  heap_1.o(.text.vPortFree)
    vPortSetupTimerInterrupt                 0x00003bc1   Thumb Code   120  port.o(.text.vPortSetupTimerInterrupt)
    vPortSuppressTicksAndSleep               0x00003c39   Thumb Code   544  port.o(.text.vPortSuppressTicksAndSleep)
    vQueueWaitForMessageRestricted           0x00003e59   Thumb Code   100  queue.o(.text.vQueueWaitForMessageRestricted)
    vTaskInternalSetTimeOutState             0x00003ebd   Thumb Code    36  tasks.o(.text.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x00003ee1   Thumb Code    14  tasks.o(.text.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x00003ef1   Thumb Code    66  tasks.o(.text.vTaskPlaceOnEventList)
    vTaskPlaceOnEventListRestricted          0x00003f35   Thumb Code   124  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    vTaskPriorityDisinheritAfterTimeout      0x00003fb1   Thumb Code   386  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    vTaskResume                              0x00004135   Thumb Code   264  tasks.o(.text.vTaskResume)
    vTaskStartScheduler                      0x0000423d   Thumb Code   178  tasks.o(.text.vTaskStartScheduler)
    vTaskStepTick                            0x000042f1   Thumb Code   204  tasks.o(.text.vTaskStepTick)
    vTaskSuspend                             0x000043bd   Thumb Code   378  tasks.o(.text.vTaskSuspend)
    vTaskSuspendAll                          0x00004539   Thumb Code    16  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x00004549   Thumb Code   190  tasks.o(.text.vTaskSwitchContext)
    xPortStartScheduler                      0x00004609   Thumb Code   342  port.o(.text.xPortStartScheduler)
    xQueueGenericCreate                      0x00004761   Thumb Code   154  queue.o(.text.xQueueGenericCreate)
    xQueueGenericReset                       0x000047fd   Thumb Code   264  queue.o(.text.xQueueGenericReset)
    xQueueGenericSend                        0x00004905   Thumb Code   628  queue.o(.text.xQueueGenericSend)
    xQueueReceive                            0x00004b79   Thumb Code   476  queue.o(.text.xQueueReceive)
    xQueueSemaphoreTake                      0x00004d55   Thumb Code   528  queue.o(.text.xQueueSemaphoreTake)
    xTaskCheckForTimeOut                     0x00004f65   Thumb Code   252  tasks.o(.text.xTaskCheckForTimeOut)
    xTaskCreate                              0x00005061   Thumb Code   160  tasks.o(.text.xTaskCreate)
    xTaskDelayUntil                          0x00005101   Thumb Code   278  tasks.o(.text.xTaskDelayUntil)
    xTaskGetSchedulerState                   0x00005219   Thumb Code    56  tasks.o(.text.xTaskGetSchedulerState)
    xTaskGetTickCount                        0x00005251   Thumb Code    20  tasks.o(.text.xTaskGetTickCount)
    xTaskIncrementTick                       0x00005265   Thumb Code   608  tasks.o(.text.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x000054c5   Thumb Code   312  tasks.o(.text.xTaskPriorityDisinherit)
    xTaskPriorityInherit                     0x000055fd   Thumb Code   348  tasks.o(.text.xTaskPriorityInherit)
    xTaskRemoveFromEventList                 0x00005759   Thumb Code   402  tasks.o(.text.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x000058ed   Thumb Code   546  tasks.o(.text.xTaskResumeAll)
    xTimerCreateTimerTask                    0x00005b11   Thumb Code   108  timers.o(.text.xTimerCreateTimerTask)
    __aeabi_dadd                             0x00005b7d   Thumb Code     0  daddsub_clz.o(x$fpl$dadd)
    _dadd                                    0x00005b7d   Thumb Code   332  daddsub_clz.o(x$fpl$dadd)
    __aeabi_ddiv                             0x00005ccd   Thumb Code     0  ddiv.o(x$fpl$ddiv)
    _ddiv                                    0x00005ccd   Thumb Code   556  ddiv.o(x$fpl$ddiv)
    __aeabi_d2iz                             0x00005f81   Thumb Code     0  dfix.o(x$fpl$dfix)
    _dfix                                    0x00005f81   Thumb Code    94  dfix.o(x$fpl$dfix)
    __aeabi_d2uiz                            0x00005fe1   Thumb Code     0  dfixu.o(x$fpl$dfixu)
    _dfixu                                   0x00005fe1   Thumb Code    90  dfixu.o(x$fpl$dfixu)
    __aeabi_ui2d                             0x0000603b   Thumb Code     0  dflt_clz.o(x$fpl$dfltu)
    _dfltu                                   0x0000603b   Thumb Code    38  dflt_clz.o(x$fpl$dfltu)
    __aeabi_dmul                             0x00006061   Thumb Code     0  dmul.o(x$fpl$dmul)
    _dmul                                    0x00006061   Thumb Code   332  dmul.o(x$fpl$dmul)
    __fpl_dnaninf                            0x000061b5   Thumb Code   156  dnaninf.o(x$fpl$dnaninf)
    __fpl_dretinf                            0x00006251   Thumb Code    12  dretinf.o(x$fpl$dretinf)
    __aeabi_dsub                             0x0000625d   Thumb Code     0  daddsub_clz.o(x$fpl$dsub)
    _dsub                                    0x0000625d   Thumb Code   472  daddsub_clz.o(x$fpl$dsub)
    __aeabi_f2d                              0x00006439   Thumb Code     0  f2d.o(x$fpl$f2d)
    _f2d                                     0x00006439   Thumb Code    86  f2d.o(x$fpl$f2d)
    __fpl_fnaninf                            0x0000648f   Thumb Code   140  fnaninf.o(x$fpl$fnaninf)
    _fp_init                                 0x0000651b   Thumb Code    26  fpinit.o(x$fpl$fpinit)
    __fplib_config_fpu_vfp                   0x00006533   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __fplib_config_pureend_doubles           0x00006533   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __I$use$fp                               0x00006534   Number         0  usenofp.o(x$fpl$usenofp)
    pinCFG                                   0x00006534   Data          96  dio.o(.rodata.pinCFG)
    uxTopUsedPriority                        0x0000665c   Data           4  tasks.o(.rodata.uxTopUsedPriority)
    Region$$Table$$Base                      0x00006660   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00006680   Number         0  anon$$obj.o(Region$$Table)
    Duty_Cycle                               0x20000000   Data           4  pwm.o(.data.Duty_Cycle)
    Load_Value                               0x20000004   Data           4  pwm.o(.data.Load_Value)
    SystemCoreClock                          0x20000008   Data           4  system_tm4c123.o(.data.SystemCoreClock)
    __libspace_start                         0x20000010   Data          96  libspace.o(.bss)
    LCDHandle                                0x20000070   Data           4  main.o(.bss.LCDHandle)
    __temporary_stack_top$libspace           0x20000070   Data           0  libspace.o(.bss)
    LDRHandle                                0x20000074   Data           4  main.o(.bss.LDRHandle)
    TSHandle                                 0x20000078   Data           4  main.o(.bss.TSHandle)
    direction                                0x2000007c   Data           1  motor.o(.bss.direction)
    pxCurrentTCB                             0x20000088   Data           4  tasks.o(.bss.pxCurrentTCB)
    xQueue1                                  0x20002204   Data           4  main.o(.bss.xQueue1)
    xQueue2                                  0x20002208   Data           4  main.o(.bss.xQueue2)
    xQueue3                                  0x2000220c   Data           4  main.o(.bss.xQueue3)
    xQueue4                                  0x20002210   Data           4  main.o(.bss.xQueue4)
    xQueue5                                  0x20002214   Data           4  main.o(.bss.xQueue5)
    xSemaphore                               0x2000221c   Data           4  main.o(.bss.xSemaphore)



==============================================================================

Memory Map of the image

  Image Entry point : 0x0000030d

  Load Region LR_1 (Base: 0x00000000, Size: 0x00006690, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00006680, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x0000026c   Data   RO          236    RESET               startup_tm4c123.o
    0x0000026c   0x0000026c   0x00000008   Code   RO          672  * !!!main             c_w.l(__main.o)
    0x00000274   0x00000274   0x00000034   Code   RO          876    !!!scatter          c_w.l(__scatter.o)
    0x000002a8   0x000002a8   0x0000001a   Code   RO          878    !!handler_copy      c_w.l(__scatter_copy.o)
    0x000002c2   0x000002c2   0x00000002   PAD
    0x000002c4   0x000002c4   0x0000001c   Code   RO          880    !!handler_zi        c_w.l(__scatter_zi.o)
    0x000002e0   0x000002e0   0x00000002   Code   RO          738    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x000002e2   0x000002e2   0x00000004   Code   RO          744    .ARM.Collect$$libinit$$00000001  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          747    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          749    .ARM.Collect$$libinit$$00000006  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          752    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          754    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          756    .ARM.Collect$$libinit$$00000010  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          759    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          761    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          763    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          765    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          767    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          769    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          771    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          773    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          775    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          777    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          779    .ARM.Collect$$libinit$$00000027  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          783    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          785    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          787    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          789    .ARM.Collect$$libinit$$00000034  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000002   Code   RO          790    .ARM.Collect$$libinit$$00000035  c_w.l(libinit2.o)
    0x000002e8   0x000002e8   0x00000002   Code   RO          812    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO          827    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO          829    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO          832    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO          835    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO          837    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO          840    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x000002ea   0x000002ea   0x00000002   Code   RO          841    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x000002ec   0x000002ec   0x00000000   Code   RO          702    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x000002ec   0x000002ec   0x00000000   Code   RO          715    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x000002ec   0x000002ec   0x00000006   Code   RO          727    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x000002f2   0x000002f2   0x00000000   Code   RO          717    .ARM.Collect$$rtentry$$00000009  c_w.l(__rtentry2.o)
    0x000002f2   0x000002f2   0x00000004   Code   RO          718    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x000002f6   0x000002f6   0x00000000   Code   RO          720    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x000002f6   0x000002f6   0x00000008   Code   RO          721    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x000002fe   0x000002fe   0x00000002   Code   RO          742    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x00000300   0x00000300   0x00000000   Code   RO          792    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x00000300   0x00000300   0x00000004   Code   RO          793    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x00000304   0x00000304   0x00000006   Code   RO          794    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x0000030a   0x0000030a   0x00000002   PAD
    0x0000030c   0x0000030c   0x00000114   Code   RO          237  * .text               startup_tm4c123.o
    0x00000420   0x00000420   0x0000008a   Code   RO          664    .text               c_w.l(rt_memcpy_v6.o)
    0x000004aa   0x000004aa   0x00000010   Code   RO          666    .text               c_w.l(aeabi_memset4.o)
    0x000004ba   0x000004ba   0x00000044   Code   RO          668    .text               c_w.l(rt_memclr.o)
    0x000004fe   0x000004fe   0x00000006   Code   RO          670    .text               c_w.l(heapauxi.o)
    0x00000504   0x00000504   0x00000064   Code   RO          703    .text               c_w.l(rt_memcpy_w.o)
    0x00000568   0x00000568   0x0000004e   Code   RO          705    .text               c_w.l(rt_memclr_w.o)
    0x000005b6   0x000005b6   0x0000004a   Code   RO          729    .text               c_w.l(sys_stackheap_outer.o)
    0x00000600   0x00000600   0x00000012   Code   RO          731    .text               c_w.l(exit.o)
    0x00000612   0x00000612   0x00000002   PAD
    0x00000614   0x00000614   0x00000008   Code   RO          739    .text               c_w.l(libspace.o)
    0x0000061c   0x0000061c   0x0000000c   Code   RO          802    .text               c_w.l(sys_exit.o)
    0x00000628   0x00000628   0x00000002   Code   RO          817    .text               c_w.l(use_no_semi.o)
    0x0000062a   0x0000062a   0x00000000   Code   RO          819    .text               c_w.l(indicate_semi.o)
    0x0000062a   0x0000062a   0x00000002   PAD
    0x0000062c   0x0000062c   0x0000039c   Code   RO           23    .text.ADC_Init      adc.o
    0x000009c8   0x000009c8   0x00000096   Code   RO           27    .text.ADC_Init_TS   adc.o
    0x00000a5e   0x00000a5e   0x00000002   PAD
    0x00000a60   0x00000a60   0x000001b0   Code   RO           21    .text.ADC_Read      adc.o
    0x00000c10   0x00000c10   0x000000e0   Code   RO           29    .text.ADC_Read_TS   adc.o
    0x00000cf0   0x00000cf0   0x00000140   Code   RO           25    .text.ADC_sequencer_EN  adc.o
    0x00000e30   0x00000e30   0x00000500   Code   RO           49    .text.DIO_Init      dio.o
    0x00001330   0x00001330   0x000000e4   Code   RO           55    .text.DIO_ReadPin   dio.o
    0x00001414   0x00001414   0x000001ac   Code   RO           53    .text.DIO_WritePin  dio.o
    0x000015c0   0x000015c0   0x00000078   Code   RO           51    .text.DIO_WritePort  dio.o
    0x00001638   0x00001638   0x0000002e   Code   RO          131    .text.GET_Start_Button  pushbutton.o
    0x00001666   0x00001666   0x00000002   PAD
    0x00001668   0x00001668   0x0000000a   Code   RO           94    .text.LCD_Clear     lcd.o
    0x00001672   0x00001672   0x00000002   PAD
    0x00001674   0x00001674   0x0000004c   Code   RO           92    .text.LCD_Cmd       lcd.o
    0x000016c0   0x000016c0   0x00000038   Code   RO          106    .text.LCD_GoTo      lcd.o
    0x000016f8   0x000016f8   0x0000005e   Code   RO          102    .text.LCD_GoToString  lcd.o
    0x00001756   0x00001756   0x00000002   PAD
    0x00001758   0x00001758   0x0000004c   Code   RO           96    .text.LCD_Init      lcd.o
    0x000017a4   0x000017a4   0x00000146   Code   RO          226    .text.LCD_Print     swc4.o
    0x000018ea   0x000018ea   0x00000002   PAD
    0x000018ec   0x000018ec   0x00000056   Code   RO           98    .text.LCD_SendChar  lcd.o
    0x00001942   0x00001942   0x00000002   PAD
    0x00001944   0x00001944   0x0000002c   Code   RO          100    .text.LCD_SendString  lcd.o
    0x00001970   0x00001970   0x00000084   Code   RO          104    .text.LCD_Write_Int  lcd.o
    0x000019f4   0x000019f4   0x00000078   Code   RO          201    .text.LDR_Read      swc2.o
    0x00001a6c   0x00001a6c   0x00000168   Code   RO          214    .text.LDR_Update    swc3.o
    0x00001bd4   0x00001bd4   0x00000010   Code   RO          163    .text.LdrLeft_Init  sensor.o
    0x00001be4   0x00001be4   0x0000000e   Code   RO          167    .text.LdrLeft_Read  sensor.o
    0x00001bf2   0x00001bf2   0x00000002   PAD
    0x00001bf4   0x00001bf4   0x00000010   Code   RO          161    .text.LdrRight_Init  sensor.o
    0x00001c04   0x00001c04   0x0000000e   Code   RO          165    .text.LdrRight_Read  sensor.o
    0x00001c12   0x00001c12   0x00000002   PAD
    0x00001c14   0x00001c14   0x0000002c   Code   RO          187    .text.ModulesInit   swc1.o
    0x00001c40   0x00001c40   0x00000012   Code   RO          115    .text.Motors_Init   motor.o
    0x00001c52   0x00001c52   0x00000002   PAD
    0x00001c54   0x00001c54   0x0000000c   Code   RO          119    .text.Motors_get_direction  motor.o
    0x00001c60   0x00001c60   0x0000018c   Code   RO          117    .text.Motors_set_direction  motor.o
    0x00001dec   0x00001dec   0x00000138   Code   RO          142    .text.PWM_INIT      pwm.o
    0x00001f24   0x00001f24   0x0000005e   Code   RO          144    .text.PWM_set_DC    pwm.o
    0x00001f82   0x00001f82   0x0000000e   PAD
    0x00001f90   0x00001f90   0x00000064   Code   RO          296    .text.PendSV_Handler  port.o
    0x00001ff4   0x00001ff4   0x00000008   Code   RO          129    .text.PushButton_INIT  pushbutton.o
    0x00001ffc   0x00001ffc   0x00000004   PAD
    0x00002000   0x00002000   0x00000024   Code   RO          280    .text.SVC_Handler   port.o
    0x00002024   0x00002024   0x0000008e   Code   RO          189    .text.SwitchCheck   swc1.o
    0x000020b2   0x000020b2   0x00000002   PAD
    0x000020b4   0x000020b4   0x0000003c   Code   RO          298    .text.SysTick_Handler  port.o
    0x000020f0   0x000020f0   0x0000010c   Code   RO          248    .text.SystemInit    system_tm4c123.o
    0x000021fc   0x000021fc   0x0000000c   Code   RO          157    .text.TS_Init       sensor.o
    0x00002208   0x00002208   0x00000016   Code   RO          159    .text.TS_Read       sensor.o
    0x0000221e   0x0000221e   0x00000002   PAD
    0x00002220   0x00002220   0x00000036   Code   RO          216    .text.TS_Update     swc3.o
    0x00002256   0x00002256   0x00000002   PAD
    0x00002258   0x00002258   0x00000078   Code   RO          203    .text.TempSensor_Read  swc2.o
    0x000022d0   0x000022d0   0x0000005e   Code   RO          199    .text.Ultrasonic_Read  swc2.o
    0x0000232e   0x0000232e   0x00000002   PAD
    0x00002330   0x00002330   0x00000170   Code   RO          212    .text.Ultrasonic_Update  swc3.o
    0x000024a0   0x000024a0   0x0000003e   Code   RO           38    .text.delay_ms      delay.o
    0x000024de   0x000024de   0x00000002   PAD
    0x000024e0   0x000024e0   0x0000003a   Code   RO           40    .text.delay_us      delay.o
    0x0000251a   0x0000251a   0x00000002   PAD
    0x0000251c   0x0000251c   0x00000080   Code   RO          516    .text.eTaskConfirmSleepModeStatus  tasks.o
    0x0000259c   0x0000259c   0x00000010   Code   RO           75    .text.gptm_deinit   gptm.o
    0x000025ac   0x000025ac   0x00000010   Code   RO           83    .text.gptm_enable   gptm.o
    0x000025bc   0x000025bc   0x00000012   Code   RO           81    .text.gptm_get_value  gptm.o
    0x000025ce   0x000025ce   0x00000002   PAD
    0x000025d0   0x000025d0   0x0000004a   Code   RO           73    .text.gptm_init     gptm.o
    0x0000261a   0x0000261a   0x00000002   PAD
    0x0000261c   0x0000261c   0x00000020   Code   RO           79    .text.gptm_set_value_ticks  gptm.o
    0x0000263c   0x0000263c   0x000001f4   Code   RO            2    .text.main          main.o
    0x00002830   0x00002830   0x00000122   Code   RO          438    .text.prvAddCurrentTaskToDelayedList  tasks.o
    0x00002952   0x00002952   0x00000002   PAD
    0x00002954   0x00002954   0x00000154   Code   RO          426    .text.prvAddNewTaskToReadyList  tasks.o
    0x00002aa8   0x00002aa8   0x0000006a   Code   RO          592    .text.prvCheckForValidListAndQueue  timers.o
    0x00002b12   0x00002b12   0x00000002   PAD
    0x00002b14   0x00002b14   0x0000005a   Code   RO          556    .text.prvCheckTasksWaitingTermination  tasks.o
    0x00002b6e   0x00002b6e   0x00000002   PAD
    0x00002b70   0x00002b70   0x00000042   Code   RO          373    .text.prvCopyDataFromQueue  queue.o
    0x00002bb2   0x00002bb2   0x00000002   PAD
    0x00002bb4   0x00002bb4   0x000000cc   Code   RO          359    .text.prvCopyDataToQueue  queue.o
    0x00002c80   0x00002c80   0x00000018   Code   RO          432    .text.prvDeleteTCB  tasks.o
    0x00002c98   0x00002c98   0x00000026   Code   RO          377    .text.prvGetDisinheritPriorityAfterTimeout  queue.o
    0x00002cbe   0x00002cbe   0x00000002   PAD
    0x00002cc0   0x00002cc0   0x0000007c   Code   RO          558    .text.prvGetExpectedIdleTime  tasks.o
    0x00002d3c   0x00002d3c   0x00000040   Code   RO          630    .text.prvGetNextExpireTime  timers.o
    0x00002d7c   0x00002d7c   0x0000009a   Code   RO          464    .text.prvIdleTask   tasks.o
    0x00002e16   0x00002e16   0x00000002   PAD
    0x00002e18   0x00002e18   0x0000004e   Code   RO          339    .text.prvInitialiseNewQueue  queue.o
    0x00002e66   0x00002e66   0x00000002   PAD
    0x00002e68   0x00002e68   0x00000124   Code   RO          424    .text.prvInitialiseNewTask  tasks.o
    0x00002f8c   0x00002f8c   0x0000008e   Code   RO          554    .text.prvInitialiseTaskLists  tasks.o
    0x0000301a   0x0000301a   0x00000002   PAD
    0x0000301c   0x0000301c   0x00000086   Code   RO          644    .text.prvInsertTimerInActiveList  timers.o
    0x000030a2   0x000030a2   0x00000002   PAD
    0x000030a4   0x000030a4   0x00000028   Code   RO          375    .text.prvIsQueueEmpty  queue.o
    0x000030cc   0x000030cc   0x0000002e   Code   RO          363    .text.prvIsQueueFull  queue.o
    0x000030fa   0x000030fa   0x00000002   PAD
    0x000030fc   0x000030fc   0x000000ec   Code   RO          361    .text.prvNotifyQueueSetContainer  queue.o
    0x000031e8   0x000031e8   0x00000028   Code   RO          288    .text.prvPortStartFirstTask  port.o
    0x00003210   0x00003210   0x00000054   Code   RO          638    .text.prvProcessExpiredTimer  timers.o
    0x00003264   0x00003264   0x00000180   Code   RO          634    .text.prvProcessReceivedCommands  timers.o
    0x000033e4   0x000033e4   0x0000009a   Code   RO          632    .text.prvProcessTimerOrBlockTask  timers.o
    0x0000347e   0x0000347e   0x00000002   PAD
    0x00003480   0x00003480   0x00000034   Code   RO          642    .text.prvReloadTimer  timers.o
    0x000034b4   0x000034b4   0x0000003c   Code   RO          430    .text.prvResetNextTaskUnblockTime  tasks.o
    0x000034f0   0x000034f0   0x00000044   Code   RO          636    .text.prvSampleTimeNow  timers.o
    0x00003534   0x00003534   0x00000052   Code   RO          640    .text.prvSwitchTimerLists  timers.o
    0x00003586   0x00003586   0x00000002   PAD
    0x00003588   0x00003588   0x0000004c   Code   RO          278    .text.prvTaskExitError  port.o
    0x000035d4   0x000035d4   0x0000006a   Code   RO          458    .text.prvTaskIsTaskSuspended  tasks.o
    0x0000363e   0x0000363e   0x00000002   PAD
    0x00003640   0x00003640   0x0000001e   Code   RO          594    .text.prvTimerTask  timers.o
    0x0000365e   0x0000365e   0x00000002   PAD
    0x00003660   0x00003660   0x000000cc   Code   RO          365    .text.prvUnlockQueue  queue.o
    0x0000372c   0x0000372c   0x000000c0   Code   RO          317    .text.pvPortMalloc  heap_1.o
    0x000037ec   0x000037ec   0x0000002c   Code   RO          538    .text.pvTaskIncrementMutexHeldCount  tasks.o
    0x00003818   0x00003818   0x0000005e   Code   RO          276    .text.pxPortInitialiseStack  port.o
    0x00003876   0x00003876   0x00000002   PAD
    0x00003878   0x00003878   0x00000118   Code   RO          178    .text.ultarsonic_get_value  ultrasonic.o
    0x00003990   0x00003990   0x00000016   Code   RO          176    .text.ultarsonic_init  ultrasonic.o
    0x000039a6   0x000039a6   0x00000002   PAD
    0x000039a8   0x000039a8   0x00000048   Code   RO          267    .text.uxListRemove  list.o
    0x000039f0   0x000039f0   0x0000000c   Code   RO          474    .text.uxTaskGetNumberOfTasks  tasks.o
    0x000039fc   0x000039fc   0x0000002e   Code   RO          259    .text.vListInitialise  list.o
    0x00003a2a   0x00003a2a   0x00000002   PAD
    0x00003a2c   0x00003a2c   0x0000000e   Code   RO          261    .text.vListInitialiseItem  list.o
    0x00003a3a   0x00003a3a   0x00000002   PAD
    0x00003a3c   0x00003a3c   0x0000006a   Code   RO          265    .text.vListInsert   list.o
    0x00003aa6   0x00003aa6   0x00000002   PAD
    0x00003aa8   0x00003aa8   0x0000003a   Code   RO          263    .text.vListInsertEnd  list.o
    0x00003ae2   0x00003ae2   0x00000002   PAD
    0x00003ae4   0x00003ae4   0x00000014   Code   RO          286    .text.vPortEnableVFP  port.o
    0x00003af8   0x00003af8   0x00000056   Code   RO          292    .text.vPortEnterCritical  port.o
    0x00003b4e   0x00003b4e   0x00000002   PAD
    0x00003b50   0x00003b50   0x0000004a   Code   RO          294    .text.vPortExitCritical  port.o
    0x00003b9a   0x00003b9a   0x00000002   PAD
    0x00003b9c   0x00003b9c   0x00000024   Code   RO          319    .text.vPortFree     heap_1.o
    0x00003bc0   0x00003bc0   0x00000078   Code   RO          284    .text.vPortSetupTimerInterrupt  port.o
    0x00003c38   0x00003c38   0x00000220   Code   RO          300    .text.vPortSuppressTicksAndSleep  port.o
    0x00003e58   0x00003e58   0x00000064   Code   RO          403    .text.vQueueWaitForMessageRestricted  queue.o
    0x00003ebc   0x00003ebc   0x00000024   Code   RO          506    .text.vTaskInternalSetTimeOutState  tasks.o
    0x00003ee0   0x00003ee0   0x0000000e   Code   RO          510    .text.vTaskMissedYield  tasks.o
    0x00003eee   0x00003eee   0x00000002   PAD
    0x00003ef0   0x00003ef0   0x00000042   Code   RO          494    .text.vTaskPlaceOnEventList  tasks.o
    0x00003f32   0x00003f32   0x00000002   PAD
    0x00003f34   0x00003f34   0x0000007c   Code   RO          498    .text.vTaskPlaceOnEventListRestricted  tasks.o
    0x00003fb0   0x00003fb0   0x00000182   Code   RO          534    .text.vTaskPriorityDisinheritAfterTimeout  tasks.o
    0x00004132   0x00004132   0x00000002   PAD
    0x00004134   0x00004134   0x00000108   Code   RO          456    .text.vTaskResume   tasks.o
    0x0000423c   0x0000423c   0x000000b2   Code   RO          462    .text.vTaskStartScheduler  tasks.o
    0x000042ee   0x000042ee   0x00000002   PAD
    0x000042f0   0x000042f0   0x000000cc   Code   RO          488    .text.vTaskStepTick  tasks.o
    0x000043bc   0x000043bc   0x0000017a   Code   RO          452    .text.vTaskSuspend  tasks.o
    0x00004536   0x00004536   0x00000002   PAD
    0x00004538   0x00004538   0x00000010   Code   RO          436    .text.vTaskSuspendAll  tasks.o
    0x00004548   0x00004548   0x000000be   Code   RO          454    .text.vTaskSwitchContext  tasks.o
    0x00004606   0x00004606   0x00000002   PAD
    0x00004608   0x00004608   0x00000156   Code   RO          282    .text.xPortStartScheduler  port.o
    0x0000475e   0x0000475e   0x00000002   PAD
    0x00004760   0x00004760   0x0000009a   Code   RO          337    .text.xQueueGenericCreate  queue.o
    0x000047fa   0x000047fa   0x00000002   PAD
    0x000047fc   0x000047fc   0x00000108   Code   RO          335    .text.xQueueGenericReset  queue.o
    0x00004904   0x00004904   0x00000274   Code   RO          351    .text.xQueueGenericSend  queue.o
    0x00004b78   0x00004b78   0x000001dc   Code   RO          371    .text.xQueueReceive  queue.o
    0x00004d54   0x00004d54   0x00000210   Code   RO          355    .text.xQueueSemaphoreTake  queue.o
    0x00004f64   0x00004f64   0x000000fc   Code   RO          508    .text.xTaskCheckForTimeOut  tasks.o
    0x00005060   0x00005060   0x000000a0   Code   RO          422    .text.xTaskCreate   tasks.o
    0x00005100   0x00005100   0x00000116   Code   RO          434    .text.xTaskDelayUntil  tasks.o
    0x00005216   0x00005216   0x00000002   PAD
    0x00005218   0x00005218   0x00000038   Code   RO          528    .text.xTaskGetSchedulerState  tasks.o
    0x00005250   0x00005250   0x00000014   Code   RO          470    .text.xTaskGetTickCount  tasks.o
    0x00005264   0x00005264   0x00000260   Code   RO          468    .text.xTaskIncrementTick  tasks.o
    0x000054c4   0x000054c4   0x00000138   Code   RO          532    .text.xTaskPriorityDisinherit  tasks.o
    0x000055fc   0x000055fc   0x0000015c   Code   RO          530    .text.xTaskPriorityInherit  tasks.o
    0x00005758   0x00005758   0x00000192   Code   RO          500    .text.xTaskRemoveFromEventList  tasks.o
    0x000058ea   0x000058ea   0x00000002   PAD
    0x000058ec   0x000058ec   0x00000222   Code   RO          440    .text.xTaskResumeAll  tasks.o
    0x00005b0e   0x00005b0e   0x00000002   PAD
    0x00005b10   0x00005b10   0x0000006c   Code   RO          590    .text.xTimerCreateTimerTask  timers.o
    0x00005b7c   0x00005b7c   0x00000150   Code   RO          674    x$fpl$dadd          fz_wm.l(daddsub_clz.o)
    0x00005ccc   0x00005ccc   0x000002b4   Code   RO          681    x$fpl$ddiv          fz_wm.l(ddiv.o)
    0x00005f80   0x00005f80   0x0000005e   Code   RO          684    x$fpl$dfix          fz_wm.l(dfix.o)
    0x00005fde   0x00005fde   0x00000002   PAD
    0x00005fe0   0x00005fe0   0x0000005a   Code   RO          688    x$fpl$dfixu         fz_wm.l(dfixu.o)
    0x0000603a   0x0000603a   0x00000026   Code   RO          692    x$fpl$dfltu         fz_wm.l(dflt_clz.o)
    0x00006060   0x00006060   0x00000154   Code   RO          698    x$fpl$dmul          fz_wm.l(dmul.o)
    0x000061b4   0x000061b4   0x0000009c   Code   RO          707    x$fpl$dnaninf       fz_wm.l(dnaninf.o)
    0x00006250   0x00006250   0x0000000c   Code   RO          709    x$fpl$dretinf       fz_wm.l(dretinf.o)
    0x0000625c   0x0000625c   0x000001dc   Code   RO          676    x$fpl$dsub          fz_wm.l(daddsub_clz.o)
    0x00006438   0x00006438   0x00000056   Code   RO          700    x$fpl$f2d           fz_wm.l(f2d.o)
    0x0000648e   0x0000648e   0x0000008c   Code   RO          711    x$fpl$fnaninf       fz_wm.l(fnaninf.o)
    0x0000651a   0x0000651a   0x0000001a   Code   RO          800    x$fpl$fpinit        fz_wm.l(fpinit.o)
    0x00006534   0x00006534   0x00000000   Code   RO          713    x$fpl$usenofp       fz_wm.l(usenofp.o)
    0x00006534   0x00006534   0x00000060   Data   RO           65    .rodata.pinCFG      dio.o
    0x00006594   0x00006594   0x00000072   Data   RO           10    .rodata.str1.1      main.o
    0x00006606   0x00006606   0x00000018   Data   RO          191    .rodata.str1.1      swc1.o
    0x0000661e   0x0000661e   0x00000010   Data   RO          218    .rodata.str1.1      swc3.o
    0x0000662e   0x0000662e   0x0000001f   Data   RO          228    .rodata.str1.1      swc4.o
    0x0000664d   0x0000664d   0x00000005   Data   RO          576    .rodata.str1.1      tasks.o
    0x00006652   0x00006652   0x00000008   Data   RO          647    .rodata.str1.1      timers.o
    0x0000665a   0x0000665a   0x00000002   PAD
    0x0000665c   0x0000665c   0x00000004   Data   RO          561    .rodata.uxTopUsedPriority  tasks.o
    0x00006660   0x00006660   0x00000020   Data   RO          875    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x00006680, Size: 0x00000010, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00006680   0x00000004   Data   RW          149    .data.Duty_Cycle    pwm.o
    0x20000004   0x00006684   0x00000004   Data   RW          148    .data.Load_Value    pwm.o
    0x20000008   0x00006688   0x00000004   Data   RW          250    .data.SystemCoreClock  system_tm4c123.o
    0x2000000c   0x0000668c   0x00000004   Data   RW          306    .data.uxCriticalNesting  port.o


    Execution Region ER_ZI (Exec base: 0x20000010, Load base: 0x00006690, Size: 0x00002448, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000010        -       0x00000060   Zero   RW          740    .bss                c_w.l(libspace.o)
    0x20000070        -       0x00000004   Zero   RW           13    .bss.LCDHandle      main.o
    0x20000074        -       0x00000004   Zero   RW           11    .bss.LDRHandle      main.o
    0x20000078        -       0x00000004   Zero   RW           12    .bss.TSHandle       main.o
    0x2000007c        -       0x00000001   Zero   RW          121    .bss.direction      motor.o
    0x2000007d   0x00006690   0x00000003   PAD
    0x20000080        -       0x00000004   Zero   RW          651    .bss.prvSampleTimeNow.xLastTime  timers.o
    0x20000084        -       0x00000004   Zero   RW          325    .bss.pvPortMalloc.pucAlignedHeap  heap_1.o
    0x20000088        -       0x00000004   Zero   RW          560    .bss.pxCurrentTCB   tasks.o
    0x2000008c        -       0x00000004   Zero   RW          649    .bss.pxCurrentTimerList  timers.o
    0x20000090        -       0x00000004   Zero   RW          571    .bss.pxDelayedTaskList  tasks.o
    0x20000094        -       0x00000004   Zero   RW          572    .bss.pxOverflowDelayedTaskList  tasks.o
    0x20000098        -       0x00000004   Zero   RW          650    .bss.pxOverflowTimerList  timers.o
    0x2000009c        -       0x000000c8   Zero   RW          562    .bss.pxReadyTasksLists  tasks.o
    0x20000164        -       0x00002000   Zero   RW          326    .bss.ucHeap         heap_1.o
    0x20002164        -       0x00000001   Zero   RW          304    .bss.ucMaxSysCallPriority  port.o
    0x20002165   0x00006690   0x00000003   PAD
    0x20002168        -       0x00000004   Zero   RW          305    .bss.ulMaxPRIGROUPValue  port.o
    0x2000216c        -       0x00000004   Zero   RW          309    .bss.ulStoppedTimerCompensation  port.o
    0x20002170        -       0x00000004   Zero   RW          308    .bss.ulTimerCountsForOneTick  port.o
    0x20002174        -       0x00000004   Zero   RW          567    .bss.uxCurrentNumberOfTasks  tasks.o
    0x20002178        -       0x00000004   Zero   RW          566    .bss.uxDeletedTasksWaitingCleanUp  tasks.o
    0x2000217c        -       0x00000004   Zero   RW          569    .bss.uxSchedulerSuspended  tasks.o
    0x20002180        -       0x00000004   Zero   RW          564    .bss.uxTaskNumber   tasks.o
    0x20002184        -       0x00000004   Zero   RW          563    .bss.uxTopReadyPriority  tasks.o
    0x20002188        -       0x00000014   Zero   RW          652    .bss.xActiveTimerList1  timers.o
    0x2000219c        -       0x00000014   Zero   RW          653    .bss.xActiveTimerList2  timers.o
    0x200021b0        -       0x00000014   Zero   RW          581    .bss.xDelayedTaskList1  tasks.o
    0x200021c4        -       0x00000014   Zero   RW          582    .bss.xDelayedTaskList2  tasks.o
    0x200021d8        -       0x00000004   Zero   RW          577    .bss.xIdleTaskHandle  tasks.o
    0x200021dc        -       0x00000004   Zero   RW          307    .bss.xMaximumPossibleSuppressedTicks  port.o
    0x200021e0        -       0x00000004   Zero   RW          327    .bss.xNextFreeByte  heap_1.o
    0x200021e4        -       0x00000004   Zero   RW          578    .bss.xNextTaskUnblockTime  tasks.o
    0x200021e8        -       0x00000004   Zero   RW          580    .bss.xNumOfOverflows  tasks.o
    0x200021ec        -       0x00000004   Zero   RW          579    .bss.xPendedTicks   tasks.o
    0x200021f0        -       0x00000014   Zero   RW          575    .bss.xPendingReadyList  tasks.o
    0x20002204        -       0x00000004   Zero   RW            4    .bss.xQueue1        main.o
    0x20002208        -       0x00000004   Zero   RW            5    .bss.xQueue2        main.o
    0x2000220c        -       0x00000004   Zero   RW            6    .bss.xQueue3        main.o
    0x20002210        -       0x00000004   Zero   RW            7    .bss.xQueue4        main.o
    0x20002214        -       0x00000004   Zero   RW            8    .bss.xQueue5        main.o
    0x20002218        -       0x00000004   Zero   RW          568    .bss.xSchedulerRunning  tasks.o
    0x2000221c        -       0x00000004   Zero   RW            9    .bss.xSemaphore     main.o
    0x20002220        -       0x00000014   Zero   RW          573    .bss.xSuspendedTaskList  tasks.o
    0x20002234        -       0x00000014   Zero   RW          565    .bss.xTasksWaitingTermination  tasks.o
    0x20002248        -       0x00000004   Zero   RW          570    .bss.xTickCount     tasks.o
    0x2000224c        -       0x00000004   Zero   RW          646    .bss.xTimerQueue    timers.o
    0x20002250        -       0x00000004   Zero   RW          648    .bss.xTimerTaskHandle  timers.o
    0x20002254        -       0x00000004   Zero   RW          574    .bss.xYieldPending  tasks.o
    0x20002258        -       0x00000000   Zero   RW          235    HEAP                startup_tm4c123.o
    0x20002258        -       0x00000200   Zero   RW          234    STACK               startup_tm4c123.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

      2050         56          0          0          0       2635   adc.o
       120          0          0          0          0        668   delay.o
      2056         30         96          0          0       4329   dio.o
       156          0          0          0          0       1311   gptm.o
       228          0          0          0       8200       1736   heap_1.o
       574          0          0          0          0       1926   lcd.o
       296          0          0          0          0       2327   list.o
       500          0        114          0         36       1571   main.o
       426          6          0          0          1       1140   motor.o
      1592         16          0          4         17       4943   port.o
        54          0          0          0          0       1935   pushbutton.o
       406          0          0          8          0       1063   pwm.o
      3062          0          0          0          0      16950   queue.o
        94          0          0          0          0       1393   sensor.o
       276         24        620          0        512       5476   startup_tm4c123.o
       186          0         24          0          0       1250   swc1.o
       334          0          0          0          0       1651   swc2.o
       782          0         16          0          0       2255   swc3.o
       326          0         31          0          0       1352   swc4.o
       268          0          0          4          0       6739   system_tm4c123.o
      6644          0          9          0        360      27276   tasks.o
      1266         10          8          0         60       9595   timers.o
       302         16          0          0          0       1108   ultrasonic.o

    ----------------------------------------------------------------------
     22116        158        952         16       9192     100629   Object Totals
         0          0         32          0          0          0   (incl. Generated)
       118          0          2          0          6          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        16          0          0          0          0         68   aeabi_memset4.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         6          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
       812         16          0          0          0        392   daddsub_clz.o
       692        140          0          0          0        264   ddiv.o
        94          4          0          0          0        140   dfix.o
        90          4          0          0          0        140   dfixu.o
        38          0          0          0          0        116   dflt_clz.o
       340         12          0          0          0        152   dmul.o
       156          4          0          0          0        140   dnaninf.o
        12          0          0          0          0        116   dretinf.o
        86          4          0          0          0        132   f2d.o
       140          4          0          0          0        132   fnaninf.o
        26          0          0          0          0        116   fpinit.o
         0          0          0          0          0          0   usenofp.o

    ----------------------------------------------------------------------
      3172        204          0          0         96       2788   Library Totals
        10          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       676         16          0          0         96        948   c_w.l
      2486        188          0          0          0       1840   fz_wm.l

    ----------------------------------------------------------------------
      3172        204          0          0         96       2788   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     25288        362        952         16       9288     101481   Grand Totals
     25288        362        952         16       9288     101481   ELF Image Totals
     25288        362        952         16          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                26240 (  25.62kB)
    Total RW  Size (RW Data + ZI Data)              9304 (   9.09kB)
    Total ROM Size (Code + RO Data + RW Data)      26256 (  25.64kB)

==============================================================================

